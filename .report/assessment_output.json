{
    "meta": {
        "version": "3.0.0",
        "report_json_url": "https://raw.githubusercontent.com/eosc-synergy/udocker.assess.sqaaas/devel3/.report/assessment_output.json"
    },
    "repository": [
        {
            "url": "https://github.com/indigo-dc/udocker",
            "name": "indigo-dc/udocker",
            "tag": "devel3",
            "commit_id": "70915267d784b1cabe5703187112183fc1adfd99",
            "is_main_repo": true,
            "avatar_url": "https://avatars.githubusercontent.com/u/13533839?v=4",
            "description": null,
            "languages": null,
            "topics": null,
            "stargazers_count": null,
            "watchers_count": null,
            "contributors_count": null,
            "forks_count": null,
            "badge_status": "silver"
        }
    ],
    "report": {
        "QC.Acc": {
            "valid": true,
            "subcriteria": {
                "QC.Acc01": {
                    "description": "Is the source code managed with a Version Control System?",
                    "requirement_level": "MUST",
                    "hint": "The source code shall be managed with Git and remain publicly available for this criterion to be successful. Please check <a href=\"https://git-scm.com/book/es/v2\" target=\"_blank\">Pro Git</a> docs about how to get started using Git tool. Guidelines provided by the most popular social coding platforms (<a href=\"https://docs.github.com/get-started\" target=\"_blank\">GitHub</a>, <a href=\"https://about.gitlab.com/get-started/\" target=\"_blank\">GitLab</a>) are also a good starting point",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Source code uses Git for version control",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": "scm",
                                "version": "2.34.1",
                                "docker": {
                                    "image": "bitnami/git:2.34.1",
                                    "reviewed": "2021-12-30"
                                },
                                "ci": {
                                    "name": "QC.Acc github.com/indigo-dc/udocker git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree"
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/34/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 1,
                "success_subcriteria": 1
            }
        },
        "QC.Doc": {
            "valid": true,
            "subcriteria": {
                "QC.Doc06.1": {
                    "description": "Is the software scope outlined in the code repository?",
                    "requirement_level": "MUST",
                    "hint": "A README file presents your software to the audience interested in your software project. Several online sites simplify the task of creating the README file, such as <a href=\"https://www.makeareadme.com/\" target=\"_blank\">Make a README</a> or <a href=\"https://readme.so/\" target=\"_blank\">readme.so</a> sites. Be sure to add it to the code repository's root path",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A README file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/indigo-dc/udocker find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 18423}], \"CODE_OF_CONDUCT\": [{\"file_name\": \"CODE_OF_CONDUCT.md\", \"size\": 5488}], \"CONTRIBUTING\": [{\"file_name\": \"CONTRIBUTING.md\", \"size\": 1821}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 18423
                                    }
                                ],
                                "CODE_OF_CONDUCT": [
                                    {
                                        "file_name": "CODE_OF_CONDUCT.md",
                                        "size": 5488
                                    }
                                ],
                                "CONTRIBUTING": [
                                    {
                                        "file_name": "CONTRIBUTING.md",
                                        "size": 1821
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc06.3": {
                    "description": "Does the project establish a code of conduct for its participants?",
                    "requirement_level": "MUST",
                    "hint": "A CODE_OF_CONDUCT file sets the path for a constructive, respectful and positive atmosphere among all the contributors in your software project. Of course you can define your own, but in case you want to rely on external and widely-adopted code of conducts check out some of the most popular ones: <a href=\"https://contributor-covenant.org/\" target=\"_blank\">Contributor Covenant</a> or <a href=\"https://web.archive.org/web/20200330154000/http://citizencodeofconduct.org/\" target=\"_blank\">Citizen Code of Conduct</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A CODE_OF_CONDUCT file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/indigo-dc/udocker find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 18423}], \"CODE_OF_CONDUCT\": [{\"file_name\": \"CODE_OF_CONDUCT.md\", \"size\": 5488}], \"CONTRIBUTING\": [{\"file_name\": \"CONTRIBUTING.md\", \"size\": 1821}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 18423
                                    }
                                ],
                                "CODE_OF_CONDUCT": [
                                    {
                                        "file_name": "CODE_OF_CONDUCT.md",
                                        "size": 5488
                                    }
                                ],
                                "CONTRIBUTING": [
                                    {
                                        "file_name": "CONTRIBUTING.md",
                                        "size": 1821
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc06.2": {
                    "description": "Is there a clear path or guidelines on how to contribute to the code?",
                    "requirement_level": "MUST",
                    "hint": "A CONTRIBUTING file shall be present in the root path of the code repository describing the expected workflow to follow when adding contributions. Please check <a href=\"https://mozillascience.github.io/working-open-workshop/contributing/\" target=\"_blank\">Mozilla's guidelines</a> and <a href=\"https://github.com/github/docs/blob/main/CONTRIBUTING.md\" target=\"_blank\">GitHub's CONTRIBUTING.md example</a> to get inspired on how to write a good CONTRIBUTING file",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A CONTRIBUTING file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/indigo-dc/udocker find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 18423}], \"CODE_OF_CONDUCT\": [{\"file_name\": \"CODE_OF_CONDUCT.md\", \"size\": 5488}], \"CONTRIBUTING\": [{\"file_name\": \"CONTRIBUTING.md\", \"size\": 1821}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 18423
                                    }
                                ],
                                "CODE_OF_CONDUCT": [
                                    {
                                        "file_name": "CODE_OF_CONDUCT.md",
                                        "size": 5488
                                    }
                                ],
                                "CONTRIBUTING": [
                                    {
                                        "file_name": "CONTRIBUTING.md",
                                        "size": 1821
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc01.1": {
                    "description": "Are docs managed in the same repository as code?",
                    "requirement_level": "MAY",
                    "hint": "This subcriterion will succeed if the documentation files exist on the same repository as the source code, e.g. under a <code>docs/</code> folder",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Documentation resides in the same repository as code",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": null,
                                "version": null,
                                "docker": null,
                                "ci": {
                                    "name": "QC.Doc github.com/indigo-dc/udocker git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree"
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/52/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                },
                "QC.Doc02.X": {
                    "description": "Are docs following a style for the Markdown markup language?",
                    "requirement_level": "MAY",
                    "hint": "When using a docs-as-code approach, the style of the markup language is being checked. SQAaaS relies on <a href=\"https://github.com/markdownlint/markdownlint/\" target=\"_blank\">markdownlint</a> for Markdown files and <a href=\"https://github.com/twolfson/restructuredtext-lint/\" target=\"_blank\">restructuredtext-lint</a> for reStructuredText",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Docs are compliant with markdownlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-markdownlint",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "markdownlint",
                                "lang": "Markdown",
                                "version": "0.11.0",
                                "docker": {
                                    "dockerfile": "QC.Doc/markdownlint/Dockerfile",
                                    "reviewed": "1970-01-01"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/indigo-dc/udocker markdownlint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "mdl --json ."
                                    ],
                                    "stdout_text": "[]",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/61/log?consoleFull"
                                },
                                "level": "RECOMMENDED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 5,
                "success_subcriteria": 5
            }
        },
        "QC.Lic": {
            "valid": true,
            "subcriteria": {
                "QC.Lic01": {
                    "description": "Is code licensed to be freely used, modified and distributed by others?",
                    "requirement_level": "MUST",
                    "hint": "<p>Your source code repository shall be distributed under an open source license for this subcriterion to pass successfully. Be sure to have a license file present in the code repository matching the name <code>LICENSE</code> with optional extensions (depending on the format used): <code>[.md|.rst|.txt]</code>.</p><p>Valid licenses are any of those approved either by the <a href=\"https://opensource.org/licenses\" target=\"_blank\">Open Source Initiative</a> and/or the Free Software Foundation <a href=\"https://www.gnu.org/licenses/license-list.html\" target=\"_blank\"></a>. You can also check the <a href=\"https://choosealicense.com/\" target=\"_blank\">choosealicense.com</a> site</p>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "An Open Source license found in the code repository: Apache-2.0",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/indigo-dc/udocker licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"apache-2.0\",\"spdx_id\":\"Apache-2.0\",\"meta\":{\"title\":\"Apache License 2.0\",\"source\":\"https://spdx.org/licenses/Apache-2.0.html\",\"description\":\"A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.\",\"using\":{\"Kubernetes\":\"https://github.com/kubernetes/kubernetes/blob/master/LICENSE\",\"PDF.js\":\"https://github.com/mozilla/pdf.js/blob/master/LICENSE\",\"Swift\":\"https://github.com/apple/swift/blob/main/LICENSE.txt\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":\"The Apache Software Foundation <a href=\\\"https://apache.org/foundation/license-faq.html#Apply-My-Software\\\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text.\"},\"url\":\"http://choosealicense.com/licenses/apache-2.0/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"patent-use\",\"label\":\"Patent use\",\"description\":\"This license provides an express grant of patent rights from contributors.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"},{\"tag\":\"document-changes\",\"label\":\"State changes\",\"description\":\"Changes made to the licensed material must be documented.\"}],\"limitations\":[{\"tag\":\"trademark-use\",\"label\":\"Trademark use\",\"description\":\"This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights.\"},{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \\\"License\\\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \\\"Licensor\\\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \\\"Legal Entity\\\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \\\"control\\\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \\\"You\\\" (or \\\"Your\\\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \\\"Source\\\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \\\"Object\\\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \\\"Work\\\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \\\"Derivative Works\\\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \\\"Contribution\\\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \\\"submitted\\\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \\\"Not a Contribution.\\\"\\n\\n      \\\"Contributor\\\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \\\"NOTICE\\\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \\\"AS IS\\\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \\\"{}\\\"\\n      replaced with your own identifying information. (Don't include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \\\"printed page\\\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright {yyyy} {name of copyright owner}\\n\\n   Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n\",\"content_hash\":\"bec905d850e7f5dc2e2db78a950d4a9db560a0b8\",\"content_normalized\":\"terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"Apache-2.0\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "apache-2.0",
                                        "spdx_id": "Apache-2.0",
                                        "meta": {
                                            "title": "Apache License 2.0",
                                            "source": "https://spdx.org/licenses/Apache-2.0.html",
                                            "description": "A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.",
                                            "using": {
                                                "Kubernetes": "https://github.com/kubernetes/kubernetes/blob/master/LICENSE",
                                                "PDF.js": "https://github.com/mozilla/pdf.js/blob/master/LICENSE",
                                                "Swift": "https://github.com/apple/swift/blob/main/LICENSE.txt"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": "The Apache Software Foundation <a href=\"https://apache.org/foundation/license-faq.html#Apply-My-Software\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text."
                                        },
                                        "url": "http://choosealicense.com/licenses/apache-2.0/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "patent-use",
                                                    "label": "Patent use",
                                                    "description": "This license provides an express grant of patent rights from contributors."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                },
                                                {
                                                    "tag": "document-changes",
                                                    "label": "State changes",
                                                    "description": "Changes made to the licensed material must be documented."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "trademark-use",
                                                    "label": "Trademark use",
                                                    "description": "This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights."
                                                },
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                                        "content_hash": "bec905d850e7f5dc2e2db78a950d4a9db560a0b8",
                                        "content_normalized": "terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "Apache-2.0",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic01.1": {
                    "description": "Is LICENSE file placed in the root path of the code repository?",
                    "requirement_level": "MUST",
                    "hint": "Most social coding platforms require the license file to placed in the root path of the code repository, so it is a good practice to use this location by default. Allowed file names are <code>LICENSE</code>, <code>LICENSE.md</code>, <code>LICENSE.rst</code>, <code>LICENSE.txt</code>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "LICENSE file is visible at the root path of the code repository: LICENSE",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/indigo-dc/udocker licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"apache-2.0\",\"spdx_id\":\"Apache-2.0\",\"meta\":{\"title\":\"Apache License 2.0\",\"source\":\"https://spdx.org/licenses/Apache-2.0.html\",\"description\":\"A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.\",\"using\":{\"Kubernetes\":\"https://github.com/kubernetes/kubernetes/blob/master/LICENSE\",\"PDF.js\":\"https://github.com/mozilla/pdf.js/blob/master/LICENSE\",\"Swift\":\"https://github.com/apple/swift/blob/main/LICENSE.txt\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":\"The Apache Software Foundation <a href=\\\"https://apache.org/foundation/license-faq.html#Apply-My-Software\\\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text.\"},\"url\":\"http://choosealicense.com/licenses/apache-2.0/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"patent-use\",\"label\":\"Patent use\",\"description\":\"This license provides an express grant of patent rights from contributors.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"},{\"tag\":\"document-changes\",\"label\":\"State changes\",\"description\":\"Changes made to the licensed material must be documented.\"}],\"limitations\":[{\"tag\":\"trademark-use\",\"label\":\"Trademark use\",\"description\":\"This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights.\"},{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \\\"License\\\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \\\"Licensor\\\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \\\"Legal Entity\\\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \\\"control\\\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \\\"You\\\" (or \\\"Your\\\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \\\"Source\\\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \\\"Object\\\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \\\"Work\\\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \\\"Derivative Works\\\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \\\"Contribution\\\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \\\"submitted\\\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \\\"Not a Contribution.\\\"\\n\\n      \\\"Contributor\\\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \\\"NOTICE\\\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \\\"AS IS\\\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \\\"{}\\\"\\n      replaced with your own identifying information. (Don't include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \\\"printed page\\\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright {yyyy} {name of copyright owner}\\n\\n   Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n\",\"content_hash\":\"bec905d850e7f5dc2e2db78a950d4a9db560a0b8\",\"content_normalized\":\"terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"Apache-2.0\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "apache-2.0",
                                        "spdx_id": "Apache-2.0",
                                        "meta": {
                                            "title": "Apache License 2.0",
                                            "source": "https://spdx.org/licenses/Apache-2.0.html",
                                            "description": "A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.",
                                            "using": {
                                                "Kubernetes": "https://github.com/kubernetes/kubernetes/blob/master/LICENSE",
                                                "PDF.js": "https://github.com/mozilla/pdf.js/blob/master/LICENSE",
                                                "Swift": "https://github.com/apple/swift/blob/main/LICENSE.txt"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": "The Apache Software Foundation <a href=\"https://apache.org/foundation/license-faq.html#Apply-My-Software\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text."
                                        },
                                        "url": "http://choosealicense.com/licenses/apache-2.0/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "patent-use",
                                                    "label": "Patent use",
                                                    "description": "This license provides an express grant of patent rights from contributors."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                },
                                                {
                                                    "tag": "document-changes",
                                                    "label": "State changes",
                                                    "description": "Changes made to the licensed material must be documented."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "trademark-use",
                                                    "label": "Trademark use",
                                                    "description": "This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights."
                                                },
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                                        "content_hash": "bec905d850e7f5dc2e2db78a950d4a9db560a0b8",
                                        "content_normalized": "terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "Apache-2.0",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02": {
                    "description": "Does the code use a license approved by Open Source Initiative?",
                    "requirement_level": "MUST",
                    "hint": "The <a href=\"https://opensource.org/\" target=\"_blank\">Open Source Initiative (OSI)</a> sets out the requirements for software to be legally declared as Open Source. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI-approved licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License Apache-2.0 is approved by the Open Source Initiative",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/indigo-dc/udocker licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"apache-2.0\",\"spdx_id\":\"Apache-2.0\",\"meta\":{\"title\":\"Apache License 2.0\",\"source\":\"https://spdx.org/licenses/Apache-2.0.html\",\"description\":\"A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.\",\"using\":{\"Kubernetes\":\"https://github.com/kubernetes/kubernetes/blob/master/LICENSE\",\"PDF.js\":\"https://github.com/mozilla/pdf.js/blob/master/LICENSE\",\"Swift\":\"https://github.com/apple/swift/blob/main/LICENSE.txt\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":\"The Apache Software Foundation <a href=\\\"https://apache.org/foundation/license-faq.html#Apply-My-Software\\\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text.\"},\"url\":\"http://choosealicense.com/licenses/apache-2.0/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"patent-use\",\"label\":\"Patent use\",\"description\":\"This license provides an express grant of patent rights from contributors.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"},{\"tag\":\"document-changes\",\"label\":\"State changes\",\"description\":\"Changes made to the licensed material must be documented.\"}],\"limitations\":[{\"tag\":\"trademark-use\",\"label\":\"Trademark use\",\"description\":\"This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights.\"},{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \\\"License\\\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \\\"Licensor\\\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \\\"Legal Entity\\\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \\\"control\\\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \\\"You\\\" (or \\\"Your\\\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \\\"Source\\\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \\\"Object\\\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \\\"Work\\\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \\\"Derivative Works\\\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \\\"Contribution\\\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \\\"submitted\\\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \\\"Not a Contribution.\\\"\\n\\n      \\\"Contributor\\\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \\\"NOTICE\\\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \\\"AS IS\\\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \\\"{}\\\"\\n      replaced with your own identifying information. (Don't include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \\\"printed page\\\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright {yyyy} {name of copyright owner}\\n\\n   Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n\",\"content_hash\":\"bec905d850e7f5dc2e2db78a950d4a9db560a0b8\",\"content_normalized\":\"terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"Apache-2.0\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "apache-2.0",
                                        "spdx_id": "Apache-2.0",
                                        "meta": {
                                            "title": "Apache License 2.0",
                                            "source": "https://spdx.org/licenses/Apache-2.0.html",
                                            "description": "A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.",
                                            "using": {
                                                "Kubernetes": "https://github.com/kubernetes/kubernetes/blob/master/LICENSE",
                                                "PDF.js": "https://github.com/mozilla/pdf.js/blob/master/LICENSE",
                                                "Swift": "https://github.com/apple/swift/blob/main/LICENSE.txt"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": "The Apache Software Foundation <a href=\"https://apache.org/foundation/license-faq.html#Apply-My-Software\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text."
                                        },
                                        "url": "http://choosealicense.com/licenses/apache-2.0/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "patent-use",
                                                    "label": "Patent use",
                                                    "description": "This license provides an express grant of patent rights from contributors."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                },
                                                {
                                                    "tag": "document-changes",
                                                    "label": "State changes",
                                                    "description": "Changes made to the licensed material must be documented."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "trademark-use",
                                                    "label": "Trademark use",
                                                    "description": "This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights."
                                                },
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                                        "content_hash": "bec905d850e7f5dc2e2db78a950d4a9db560a0b8",
                                        "content_normalized": "terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "Apache-2.0",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02.1": {
                    "description": "Does the code use an Open Source Initiative's popular-recognized license?",
                    "requirement_level": "MAY",
                    "hint": "The Open Source Initiative (OSI) sets out the requirements for software to be legally declared as Open Source. OSI provides a list of popular licenses that shall match most of the demands. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI popular licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License Apache-2.0 is listed under the Open Source Initiative popular category",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.15.1",
                                "docker": {
                                    "dockerfile": "QC.Lic/licensee/Dockerfile",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/indigo-dc/udocker licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json"
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"apache-2.0\",\"spdx_id\":\"Apache-2.0\",\"meta\":{\"title\":\"Apache License 2.0\",\"source\":\"https://spdx.org/licenses/Apache-2.0.html\",\"description\":\"A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.\",\"using\":{\"Kubernetes\":\"https://github.com/kubernetes/kubernetes/blob/master/LICENSE\",\"PDF.js\":\"https://github.com/mozilla/pdf.js/blob/master/LICENSE\",\"Swift\":\"https://github.com/apple/swift/blob/main/LICENSE.txt\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":\"The Apache Software Foundation <a href=\\\"https://apache.org/foundation/license-faq.html#Apply-My-Software\\\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text.\"},\"url\":\"http://choosealicense.com/licenses/apache-2.0/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"patent-use\",\"label\":\"Patent use\",\"description\":\"This license provides an express grant of patent rights from contributors.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"},{\"tag\":\"document-changes\",\"label\":\"State changes\",\"description\":\"Changes made to the licensed material must be documented.\"}],\"limitations\":[{\"tag\":\"trademark-use\",\"label\":\"Trademark use\",\"description\":\"This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights.\"},{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \\\"License\\\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \\\"Licensor\\\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \\\"Legal Entity\\\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \\\"control\\\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \\\"You\\\" (or \\\"Your\\\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \\\"Source\\\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \\\"Object\\\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \\\"Work\\\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \\\"Derivative Works\\\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \\\"Contribution\\\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \\\"submitted\\\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \\\"Not a Contribution.\\\"\\n\\n      \\\"Contributor\\\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \\\"NOTICE\\\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \\\"AS IS\\\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \\\"{}\\\"\\n      replaced with your own identifying information. (Don't include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \\\"printed page\\\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright {yyyy} {name of copyright owner}\\n\\n   Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n\",\"content_hash\":\"bec905d850e7f5dc2e2db78a950d4a9db560a0b8\",\"content_normalized\":\"terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"Apache-2.0\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "apache-2.0",
                                        "spdx_id": "Apache-2.0",
                                        "meta": {
                                            "title": "Apache License 2.0",
                                            "source": "https://spdx.org/licenses/Apache-2.0.html",
                                            "description": "A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file.",
                                            "using": {
                                                "Kubernetes": "https://github.com/kubernetes/kubernetes/blob/master/LICENSE",
                                                "PDF.js": "https://github.com/mozilla/pdf.js/blob/master/LICENSE",
                                                "Swift": "https://github.com/apple/swift/blob/main/LICENSE.txt"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": "The Apache Software Foundation <a href=\"https://apache.org/foundation/license-faq.html#Apply-My-Software\">recommends</a> taking the additional step of adding a boilerplate notice to the header of each source file. You can find the notice in the appendix at the very end of the license text."
                                        },
                                        "url": "http://choosealicense.com/licenses/apache-2.0/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "patent-use",
                                                    "label": "Patent use",
                                                    "description": "This license provides an express grant of patent rights from contributors."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                },
                                                {
                                                    "tag": "document-changes",
                                                    "label": "State changes",
                                                    "description": "Changes made to the licensed material must be documented."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "trademark-use",
                                                    "label": "Trademark use",
                                                    "description": "This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights."
                                                },
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                                        "content_hash": "bec905d850e7f5dc2e2db78a950d4a9db560a0b8",
                                        "content_normalized": "terms and conditions for use, reproduction, and distribution - definitions. 'license' shall mean the terms and conditions for use, reproduction, and distribution as defined by sections 1 through 9 of this document. 'licensor' shall mean the copyright holder or entity authorized by the copyright holder that is granting the license. 'legal entity' shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. for the purposes of this definition, 'control' means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. 'you' (or 'your') shall mean an individual or legal entity exercising permissions granted by this license. 'source' form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. 'object' form shall mean any form resulting from mechanical transformation or translation of a source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. 'work' shall mean the work of authorship, whether in source or object form, made available under the license, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the appendix below). 'derivative works' shall mean any work, whether in source or object form, that is based on (or derived from) the work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. for the purposes of this license, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the work and derivative works thereof. 'contribution' shall mean any work of authorship, including the original version of the work and any modifications or additions to that work or derivative works thereof, that is intentionally submitted to licensor for inclusion in the work by the copyright holder or by an individual or legal entity authorized to submit on behalf of the copyright holder. for the purposes of this definition, 'submitted' means any form of electronic, verbal, or written communication sent to the licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the licensor for the purpose of discussing and improving the work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright holder as 'not a contribution.' 'contributor' shall mean licensor and any individual or legal entity on behalf of whom a contribution has been received by licensor and subsequently incorporated within the work. - grant of copyright license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute the work and such derivative works in source or object form. - grant of patent license. subject to the terms and conditions of this license, each contributor hereby grants to you a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the work, where such license applies only to those patent claims licensable by such contributor that are necessarily infringed by their contribution(s) alone or by combination of their contribution(s) with the work to which such contribution(s) was submitted. if you institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the work or a contribution incorporated within the work constitutes direct or contributory patent infringement, then any patent licenses granted to you under this license for that work shall terminate as of the date such litigation is filed. - redistribution. you may reproduce and distribute copies of the work or derivative works thereof in any medium, with or without modifications, and in source or object form, provided that you meet the following conditions: - you must give any other recipients of the work or derivative works a copy of this license; and - you must cause any modified files to carry prominent notices stating that you changed the files; and - you must retain, in the source form of any derivative works that you distribute, all copyright, patent, trademark, and attribution notices from the source form of the work, excluding those notices that do not pertain to any part of the derivative works; and - if the work includes a 'notice' text file as part of its distribution, then any derivative works that you distribute must include a readable copy of the attribution notices contained within such notice file, excluding those notices that do not pertain to any part of the derivative works, in at least one of the following places: within a notice text file distributed as part of the derivative works; within the source form or documentation, if provided along with the derivative works; or, within a display generated by the derivative works, if and wherever such third-party notices normally appear. the contents of the notice file are for informational purposes only and do not modify the license. you may add your own attribution notices within derivative works that you distribute, alongside or as an addendum to the notice text from the work, provided that such additional attribution notices cannot be construed as modifying the license. you may add your own copyright statement to your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of your modifications, or for any such derivative works as a whole, provided your use, reproduction, and distribution of the work otherwise complies with the conditions stated in this license. - submission of contributions. unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you to the licensor shall be under the terms and conditions of this license, without any additional terms or conditions. notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with licensor regarding such contributions. - trademarks. this license does not grant permission to use the trade names, trademarks, service marks, or product names of the licensor, except as required for reasonable and customary use in describing the origin of the work and reproducing the content of the notice file. - disclaimer of warranty. unless required by applicable law or agreed to in writing, licensor provides the work (and each contributor provides its contributions) on an 'as is' basis, without warranties or conditions of any kind, either express or implied, including, without limitation, any warranties or conditions of title, non-infringement, merchantability, or fitness for a particular purpose. you are solely responsible for determining the appropriateness of using or redistributing the work and assume any risks associated with your exercise of permissions under this license. - limitation of liability. in no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any contributor be liable to you for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this license or out of the use or inability to use the work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such contributor has been advised of the possibility of such damages. - accepting warranty or additional liability. while redistributing the work or derivative works thereof, you may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this license. however, in accepting such obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of any other contributor, and only if you agree to indemnify, defend, and hold each contributor harmless for any liability incurred by, or claims asserted against, such contributor by reason of your accepting any such warranty or additional liability.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "Apache-2.0",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 4,
                "success_subcriteria": 4
            }
        },
        "QC.Met": {
            "valid": true,
            "subcriteria": {
                "QC.Met01": {
                    "description": "Is the software citable?",
                    "requirement_level": "SHOULD",
                    "hint": "The two formats for software citation supported by SQAaaS are: 1) <a href=\"https://codemeta.github.io/\" target=\"_blank\">CodeMeta</a> and 2) <a href=\"https://citation-file-format.github.io/\" target=\"_blank\">Citation File Format (CFF)</a>. While CodeMeta provides you with a more comprehensive description, CFF is a more lightweight, good-enough approach to software (with built-in support by GitHub) citation. Both provide tools (<a href=\"https://codemeta.github.io/codemeta-generator/\" target=\"_blank\">CodeMeta generator</a>, <a href=\"https://citation-file-format.github.io/cff-initializer-javascript/#/\" target=\"_blank\">CFFINIT</a>)to easily generate a working citation file. Once having the file, be sure to add it to the root path of your code repo.",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Software metadata successfully validated",
                            "plugin": {
                                "name": "report2sqaaas-plugin-json_not_empty",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "validate_codemeta",
                                "lang": "CodeMeta",
                                "version": "latest",
                                "docker": {
                                    "image": "alpine:3.15.0",
                                    "reviewed": "2022-01-11"
                                },
                                "ci": {
                                    "name": "QC.Met github.com/indigo-dc/udocker validate_codemeta",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "cat codemeta.json"
                                    ],
                                    "stdout_text": "{\n    \"@context\": [\n        \"https://doi.org/10.5063/schema/codemeta-2.0\",\n        \"http://schema.org\"\n    ],\n    \"@type\": \"SoftwareSourceCode\",\n    \"identifier\": \"udocker\",\n    \"name\": \"udocker\",\n    \"version\": \"1.3.13\",\n    \"description\": \"A basic user tool to execute simple docker containers in batch or interactive systems without root privileges\",\n    \"license\": \"Apache Software License 2.0, OSI Approved :: Apache Software License\",\n    \"author\": [\n        {\n            \"@type\": \"Person\",\n            \"givenName\": \"Jorge\",\n            \"familyName\": \"Gomes\",\n            \"@id\": \"https://orcid.org/0000-0002-9142-2596\",\n            \"email\": \"udocker@lip.pt\"\n        }\n    ],\n    \"audience\": [\n        {\n            \"@type\": \"Audience\",\n            \"audienceType\": \"Developers\"\n        },\n        {\n            \"@type\": \"Audience\",\n            \"audienceType\": \"End Users/Desktop\"\n        },\n        {\n            \"@type\": \"Audience\",\n            \"audienceType\": \"Science/Research\"\n        }\n    ],\n    \"provider\": {\n        \"@id\": \"https://pypi.org\",\n        \"@type\": \"Organization\",\n        \"name\": \"The Python Package Index\",\n        \"url\": \"https://pypi.org\"\n    },\n    \"runtimePlatform\": \"Python 3\",\n    \"url\": \"https://github.com/indigo-dc/udocker\",\n    \"keywords\": \"Linux containers,HPC on cloud,Virtualization\",\n    \"developmentStatus\": \"5 - Production/Stable\",\n    \"programmingLanguage\": \"Python 2, Python 2.7, Python 3, Python 3.6, Python 3.7, Python 3.8, Python 3.9, Python 3.10, Python 3.11\",\n    \"applicationCategory\": \"System, Utilities\",\n    \"codeRepository\": \"https://github.com/indigo-dc/udocker\",\n    \"releaseNotes\": \"https://github.com/indigo-dc/udocker/blob/master/changelog\",\n    \"citation\": \"https://doi.org/10.1016/j.cpc.2018.05.021\",\n    \"contributor\": [\n        {\n            \"@type\": \"Person\",\n            \"givenName\": \"Mario\",\n            \"familyName\": \"David\",\n            \"@id\": \"https://orcid.org/0000-0003-1802-5356\",\n            \"email\": \"david@lip.pt\"\n        },\n        {\n            \"@type\": \"Person\",\n            \"givenName\": \"Samuel\",\n            \"familyName\": \"Bernardo\",\n            \"@id\": \"https://orcid.org/0000-0002-6175-4012\",\n            \"email\": \"samuel@lip.pt\"\n        }\n    ],\n    \"copyrightHolder\": \"LIP\",\n    \"copyrightYear\": 2016,\n    \"creator\": [\n        {\n            \"@type\": \"Person\",\n            \"givenName\": \"Jorge\",\n            \"familyName\": \"Gomes\",\n            \"@id\": \"https://orcid.org/0000-0002-9142-2596\",\n            \"email\": \"udocker@lip.pt\"\n        }\n    ],\n    \"dateCreated\": \"2021-05-26\",\n    \"affiliation\": \"LIP Lisbon\",\n    \"maintainer\": [\n        {\n            \"@type\": \"Person\",\n            \"givenName\": \"Jorge\",\n            \"familyName\": \"Gomes\",\n            \"@id\": \"https://orcid.org/0000-0002-9142-2596\",\n            \"email\": \"udocker@lip.pt\"\n        }\n    ],\n    \"contIntegration\": \"https://jenkins.eosc-synergy.eu/job/indigo-dc/job/udocker/job/master/\",\n    \"buildInstructions\": \"https://https://github.com/indigo-dc/udocker/blob/master/docs/installation_manual.md#3-source-code-and-build\",\n    \"referencePublication\": \"https://doi.org/10.1016/j.cpc.2018.05.021\",\n    \"readme\": \"https://github.com/indigo-dc/udocker/blob/master/README.md\"\n}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/79/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "@context": [
                                    "https://doi.org/10.5063/schema/codemeta-2.0",
                                    "http://schema.org"
                                ],
                                "@type": "SoftwareSourceCode",
                                "identifier": "udocker",
                                "name": "udocker",
                                "version": "1.3.13",
                                "description": "A basic user tool to execute simple docker containers in batch or interactive systems without root privileges",
                                "license": "Apache Software License 2.0, OSI Approved :: Apache Software License",
                                "author": [
                                    {
                                        "@type": "Person",
                                        "givenName": "Jorge",
                                        "familyName": "Gomes",
                                        "@id": "https://orcid.org/0000-0002-9142-2596",
                                        "email": "udocker@lip.pt"
                                    }
                                ],
                                "audience": [
                                    {
                                        "@type": "Audience",
                                        "audienceType": "Developers"
                                    },
                                    {
                                        "@type": "Audience",
                                        "audienceType": "End Users/Desktop"
                                    },
                                    {
                                        "@type": "Audience",
                                        "audienceType": "Science/Research"
                                    }
                                ],
                                "provider": {
                                    "@id": "https://pypi.org",
                                    "@type": "Organization",
                                    "name": "The Python Package Index",
                                    "url": "https://pypi.org"
                                },
                                "runtimePlatform": "Python 3",
                                "url": "https://github.com/indigo-dc/udocker",
                                "keywords": "Linux containers,HPC on cloud,Virtualization",
                                "developmentStatus": "5 - Production/Stable",
                                "programmingLanguage": "Python 2, Python 2.7, Python 3, Python 3.6, Python 3.7, Python 3.8, Python 3.9, Python 3.10, Python 3.11",
                                "applicationCategory": "System, Utilities",
                                "codeRepository": "https://github.com/indigo-dc/udocker",
                                "releaseNotes": "https://github.com/indigo-dc/udocker/blob/master/changelog",
                                "citation": "https://doi.org/10.1016/j.cpc.2018.05.021",
                                "contributor": [
                                    {
                                        "@type": "Person",
                                        "givenName": "Mario",
                                        "familyName": "David",
                                        "@id": "https://orcid.org/0000-0003-1802-5356",
                                        "email": "david@lip.pt"
                                    },
                                    {
                                        "@type": "Person",
                                        "givenName": "Samuel",
                                        "familyName": "Bernardo",
                                        "@id": "https://orcid.org/0000-0002-6175-4012",
                                        "email": "samuel@lip.pt"
                                    }
                                ],
                                "copyrightHolder": "LIP",
                                "copyrightYear": 2016,
                                "creator": [
                                    {
                                        "@type": "Person",
                                        "givenName": "Jorge",
                                        "familyName": "Gomes",
                                        "@id": "https://orcid.org/0000-0002-9142-2596",
                                        "email": "udocker@lip.pt"
                                    }
                                ],
                                "dateCreated": "2021-05-26",
                                "affiliation": "LIP Lisbon",
                                "maintainer": [
                                    {
                                        "@type": "Person",
                                        "givenName": "Jorge",
                                        "familyName": "Gomes",
                                        "@id": "https://orcid.org/0000-0002-9142-2596",
                                        "email": "udocker@lip.pt"
                                    }
                                ],
                                "contIntegration": "https://jenkins.eosc-synergy.eu/job/indigo-dc/job/udocker/job/master/",
                                "buildInstructions": "https://https://github.com/indigo-dc/udocker/blob/master/docs/installation_manual.md#3-source-code-and-build",
                                "referencePublication": "https://doi.org/10.1016/j.cpc.2018.05.021",
                                "readme": "https://github.com/indigo-dc/udocker/blob/master/README.md"
                            }
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 1,
                "success_subcriteria": 1
            }
        },
        "QC.Sec": {
            "valid": true,
            "subcriteria": {
                "QC.Sec02": {
                    "description": "Is the source code passing Static Analysis Security Testing (SAST)?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the security weaknesses found by the SAST tool",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Source code files pass SAST checks performed by bandit tool",
                            "plugin": {
                                "name": "report2sqaaas-plugin-bandit",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "bandit",
                                "lang": "Python",
                                "version": "1.7.4",
                                "docker": {
                                    "dockerfile": "QC.Sec/bandit/Dockerfile",
                                    "reviewed": "2022-03-04"
                                },
                                "ci": {
                                    "name": "QC.Sec github.com/indigo-dc/udocker bandit",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "bandit -f json --quiet  --confidence-level high --severity-level high --recursive ."
                                    ],
                                    "stdout_text": "{\n  \"errors\": [],\n  \"generated_at\": \"2024-04-02T17:56:19Z\",\n  \"metrics\": {\n    \"./conftest.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 3,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./docker_sqaaastools/find_doc_files.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 99,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./docker_sqaaastools/get_git_tags.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 35,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./setup.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 71,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_chksum.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 34,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_cli.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 1358,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_cmdparser.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 75,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_commonlocalfile.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 347,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_config.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 74,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_containerstructure.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 4,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 4,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 385,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_curl.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 1,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 231,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_curlheader.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 58,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_dockerioapi.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 1,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 738,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_dockerlocalfileapi.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 25,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 25,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 344,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_elfpatcher.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 9,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 9,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 375,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_execenginecommon.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 19,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 19,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 794,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_executionmode.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 5,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 5,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 172,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_fakechroot.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 2,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 2,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 300,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_filebind.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 11,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 11,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 179,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_fileutil.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 53,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 53,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 890,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_geturl.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 126,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_geturlexecurl.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 18,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 18,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 82,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_geturlpycurl.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 40,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_hostinfo.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 79,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_keystore.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 129,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_localfile.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 4,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 4,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 86,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_localrepository.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 7,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 7,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 1295,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_mountpoint.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 12,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 12,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 249,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_msg.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 61,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_nixauthentication.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 6,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 6,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 226,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_nvidia.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 217,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_oci.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 81,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_osinfo.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 97,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_proot.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 3,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 3,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 196,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_runc.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 624,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_singularity.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 8,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 8,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 207,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_tools.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 3,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 3,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 218,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_uenv.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 143,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_umain.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 88,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_unique.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 54,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_unshare.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 82,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_uprocess.py\": {\n      \"CONFIDENCE.HIGH\": 1,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 1,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 59,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./tests/unit/test_uvolume.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 38,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 31,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/cli.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 1321,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/cmdparser.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 163,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/commonlocalfile.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 246,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/config.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 1,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 218,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/container/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/container/localrepo.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 765,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/container/structure.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 1,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 316,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/docker.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 2,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 2,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 854,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/base.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 616,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/execmode.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 120,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/fakechroot.py\": {\n      \"CONFIDENCE.HIGH\": 2,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 2,\n      \"SEVERITY.MEDIUM\": 1,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 265,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/nvidia.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 173,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/proot.py\": {\n      \"CONFIDENCE.HIGH\": 2,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 2,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 166,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/runc.py\": {\n      \"CONFIDENCE.HIGH\": 4,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 4,\n      \"SEVERITY.MEDIUM\": 1,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 413,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/engine/singularity.py\": {\n      \"CONFIDENCE.HIGH\": 2,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 6,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 2,\n      \"SEVERITY.MEDIUM\": 6,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 159,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/genstr.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 14,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/archinfo.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 116,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/elfpatcher.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 260,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/hostinfo.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 120,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/keystore.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 101,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/nixauth.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 161,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/osinfo.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 152,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/unique.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 50,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/helper/unshare.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 64,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/localfile.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 40,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/maincmd.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 48,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/msg.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 64,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/oci.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 105,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/tools.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 266,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/umain.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 99,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/chksum.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 63,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/curl.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 375,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/filebind.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 95,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/fileutil.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 590,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/mountpoint.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 105,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/uenv.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 120,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/uprocess.py\": {\n      \"CONFIDENCE.HIGH\": 7,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 7,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 95,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"./udocker/utils/uvolume.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 28,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"_totals\": {\n      \"CONFIDENCE.HIGH\": 24,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 203,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 33,\n      \"SEVERITY.MEDIUM\": 194,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 19996,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    }\n  },\n  \"results\": []\n}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/88/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "errors": [],
                                "generated_at": "2024-04-02T17:56:19Z",
                                "metrics": {
                                    "./conftest.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 3,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./docker_sqaaastools/find_doc_files.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 99,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./docker_sqaaastools/get_git_tags.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 35,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./setup.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 71,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_chksum.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 34,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_cli.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 1358,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_cmdparser.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 75,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_commonlocalfile.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 347,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_config.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 74,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_containerstructure.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 4,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 4,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 385,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_curl.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 1,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 1,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 231,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_curlheader.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 58,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_dockerioapi.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 1,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 1,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 738,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_dockerlocalfileapi.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 25,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 25,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 344,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_elfpatcher.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 9,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 9,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 375,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_execenginecommon.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 19,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 19,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 794,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_executionmode.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 5,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 5,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 172,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_fakechroot.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 2,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 2,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 300,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_filebind.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 11,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 11,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 179,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_fileutil.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 53,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 53,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 890,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_geturl.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 126,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_geturlexecurl.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 18,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 18,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 82,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_geturlpycurl.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 40,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_hostinfo.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 79,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_keystore.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 129,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_localfile.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 4,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 4,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 86,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_localrepository.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 7,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 7,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 1295,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_mountpoint.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 12,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 12,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 249,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_msg.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 61,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_nixauthentication.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 6,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 6,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 226,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_nvidia.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 217,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_oci.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 81,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_osinfo.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 97,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_proot.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 3,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 3,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 196,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_runc.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 624,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_singularity.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 8,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 8,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 207,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_tools.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 3,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 3,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 218,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_uenv.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 143,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_umain.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 88,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_unique.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 54,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_unshare.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 82,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_uprocess.py": {
                                        "CONFIDENCE.HIGH": 1,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 1,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 59,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./tests/unit/test_uvolume.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 38,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 31,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/cli.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 1321,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/cmdparser.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 163,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/commonlocalfile.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 246,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/config.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 1,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 1,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 218,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/container/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/container/localrepo.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 765,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/container/structure.py": {
                                        "CONFIDENCE.HIGH": 3,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 1,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 3,
                                        "SEVERITY.MEDIUM": 1,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 316,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/docker.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 2,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 2,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 854,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/base.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 616,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/execmode.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 120,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/fakechroot.py": {
                                        "CONFIDENCE.HIGH": 2,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 1,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 2,
                                        "SEVERITY.MEDIUM": 1,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 265,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/nvidia.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 173,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/proot.py": {
                                        "CONFIDENCE.HIGH": 2,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 2,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 166,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/runc.py": {
                                        "CONFIDENCE.HIGH": 4,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 1,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 4,
                                        "SEVERITY.MEDIUM": 1,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 413,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/engine/singularity.py": {
                                        "CONFIDENCE.HIGH": 2,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 6,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 2,
                                        "SEVERITY.MEDIUM": 6,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 159,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/genstr.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 14,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/archinfo.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 116,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/elfpatcher.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 260,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/hostinfo.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 120,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/keystore.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 101,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/nixauth.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 161,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/osinfo.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 152,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/unique.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 50,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/helper/unshare.py": {
                                        "CONFIDENCE.HIGH": 3,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 3,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 64,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/localfile.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 40,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/maincmd.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 48,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/msg.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 64,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/oci.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 105,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/tools.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 266,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/umain.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 99,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/__init__.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 0,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/chksum.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 63,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/curl.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 375,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/filebind.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 95,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/fileutil.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 590,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/mountpoint.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 105,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/uenv.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 120,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/uprocess.py": {
                                        "CONFIDENCE.HIGH": 7,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 7,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 95,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "./udocker/utils/uvolume.py": {
                                        "CONFIDENCE.HIGH": 0,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 0,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 0,
                                        "SEVERITY.MEDIUM": 0,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 28,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    },
                                    "_totals": {
                                        "CONFIDENCE.HIGH": 24,
                                        "CONFIDENCE.LOW": 0,
                                        "CONFIDENCE.MEDIUM": 203,
                                        "CONFIDENCE.UNDEFINED": 0,
                                        "SEVERITY.HIGH": 0,
                                        "SEVERITY.LOW": 33,
                                        "SEVERITY.MEDIUM": 194,
                                        "SEVERITY.UNDEFINED": 0,
                                        "loc": 19996,
                                        "nosec": 0,
                                        "skipped_tests": 0
                                    }
                                },
                                "results": []
                            }
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 1,
                "success_subcriteria": 1
            }
        },
        "QC.Sty": {
            "valid": true,
            "subcriteria": {
                "QC.Sty01": {
                    "description": "Is the software product following a style standard for Python files?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the security weaknesses found by the linter tool",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Python files are compliant with flake8 (pycodestyle, pyflakes, mccabe) standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-flake8",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "flake8",
                                "lang": "Python",
                                "version": "4.0.1 (mccabe: 0.6.1, pycodestyle: 2.8.0, pyflakes: 2.4.0)",
                                "docker": {
                                    "image": "pipelinecomponents/flake8:0.9.0",
                                    "reviewed": "2022-03-04"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/indigo-dc/udocker flake8",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "flake8 ."
                                    ],
                                    "stdout_text": "",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/97/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": ""
                        },
                        {
                            "valid": true,
                            "message": "JSON files are compliant with jsonlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "jsonlint",
                                "lang": "JSON",
                                "version": "1.6.3",
                                "docker": {
                                    "dockerfile": "QC.Sty/jsonlint/Dockerfile",
                                    "reviewed": "2021-11-23"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/indigo-dc/udocker jsonlint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "jsonlint-cli \"**/*.json\""
                                    ],
                                    "stdout_text": "",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 1,
                "success_subcriteria": 1
            }
        },
        "QC.Uni": {
            "valid": false,
            "subcriteria": {
                "QC.Uni01": {
                    "description": "Are the tests passing through an automated means?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the failing test cases found by the {tool_name} tool",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Test cases are not passing using None testing framework",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "pytest",
                                "lang": "Python",
                                "version": "7.1.3",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-pytest:7.1.3-alpha",
                                    "reviewed": "2023-08-09"
                                },
                                "ci": {
                                    "name": "QC.Uni github.com/indigo-dc/udocker pytest",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "pytest  --json-report  --json-report-indent 4"
                                    ],
                                    "stdout_text": "============================= test session starts ==============================\nplatform linux -- Python 3.9.17, pytest-7.1.3, pluggy-1.2.0\nrootdir: /sqaaas-build/github.com/indigo-dc/udocker\nplugins: metadata-3.0.0, json-report-1.5.0\ncollected 442 items\n\ntests/unit/test_chksum.py .                                              [  0%]\ntests/unit/test_cli.py .FFFFFFFFFFFFFFF..FFFFFFFFFFFFFFFFFF              [  8%]\ntests/unit/test_cmdparser.py ....                                        [  9%]\ntests/unit/test_commonlocalfile.py ..........                            [ 11%]\ntests/unit/test_config.py .....                                          [ 12%]\ntests/unit/test_containerstructure.py ..............                     [ 15%]\ntests/unit/test_curl.py ......FFFFF.....                                 [ 19%]\ntests/unit/test_curlheader.py ....                                       [ 20%]\ntests/unit/test_dockerioapi.py ..FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF    [ 28%]\ntests/unit/test_dockerlocalfileapi.py ..........                         [ 31%]\ntests/unit/test_elfpatcher.py ..................                         [ 35%]\ntests/unit/test_execenginecommon.py ...........................          [ 41%]\ntests/unit/test_executionmode.py ....                                    [ 42%]\ntests/unit/test_fakechroot.py ..........                                 [ 44%]\ntests/unit/test_filebind.py ........                                     [ 46%]\ntests/unit/test_fileutil.py .....................................        [ 54%]\ntests/unit/test_geturl.py ..F..FFF                                       [ 56%]\ntests/unit/test_geturlexecurl.py .....                                   [ 57%]\ntests/unit/test_geturlpycurl.py ..                                       [ 58%]\ntests/unit/test_hostinfo.py .....F.                                      [ 59%]\ntests/unit/test_keystore.py ........                                     [ 61%]\ntests/unit/test_localfile.py ..                                          [ 61%]\ntests/unit/test_localrepository.py ..................................... [ 70%]\n...........                                                              [ 72%]\ntests/unit/test_mountpoint.py ..........                                 [ 75%]\ntests/unit/test_msg.py ....                                              [ 76%]\ntests/unit/test_nixauthentication.py ............                        [ 78%]\ntests/unit/test_nvidia.py ..........                                     [ 80%]\ntests/unit/test_oci.py ...                                               [ 81%]\ntests/unit/test_osinfo.py .....                                          [ 82%]\ntests/unit/test_proot.py .......                                         [ 84%]\ntests/unit/test_runc.py ..................                               [ 88%]\ntests/unit/test_singularity.py ........                                  [ 90%]\ntests/unit/test_tools.py .FFFFFFFFFF                                     [ 92%]\ntests/unit/test_uenv.py .............                                    [ 95%]\ntests/unit/test_umain.py ...                                             [ 96%]\ntests/unit/test_unique.py .......                                        [ 97%]\ntests/unit/test_unshare.py ..                                            [ 98%]\ntests/unit/test_uprocess.py ....                                         [ 99%]\ntests/unit/test_uvolume.py ...                                           [100%]\n\n=================================== FAILURES ===================================\n______________________ UdockerCLITestCase.test_02__cdrepo ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_02__cdrepo>\nmock_isdir = <MagicMock name='isdir' id='139646078058256'>\nmock_geturl = <MagicMock spec='GetURLexeCurl' id='139646078074304'>\n\n    @patch('udocker.utils.curl.GetURL')\n    @patch('udocker.cli.FileUtil.isdir')\n    def test_02__cdrepo(self, mock_isdir, mock_geturl):\n        \"\"\"Test02 UdockerCLI()._cdrepo().\"\"\"\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e0ed90>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ UdockerCLITestCase.test_03__check_imagespec __________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_03__check_imagespec>\nmock_msg = <MagicMock name='Msg' id='139646089904240'>\nmock_reponame = <MagicMock name='is_repo_name' id='139646078081488'>\n\n    @patch('udocker.cli.DockerIoAPI.is_repo_name')\n    @patch('udocker.cli.Msg')\n    def test_03__check_imagespec(self, mock_msg, mock_reponame):\n        \"\"\"Test03 UdockerCLI()._check_imagespec().\"\"\"\n        mock_msg.level = 0\n        mock_reponame.return_value = False\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e03550>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ UdockerCLITestCase.test_04__check_imagerepo __________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_04__check_imagerepo>\nmock_msg = <MagicMock name='Msg' id='139646077693040'>\nmock_reponame = <MagicMock name='is_repo_name' id='139646079925360'>\n\n    @patch('udocker.cli.DockerIoAPI.is_repo_name')\n    @patch('udocker.cli.Msg')\n    def test_04__check_imagerepo(self, mock_msg, mock_reponame):\n        \"\"\"Test04 UdockerCLI()._check_imagerepo().\"\"\"\n        mock_msg.level = 0\n        mock_reponame.return_value = False\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3952eb0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ UdockerCLITestCase.test_05__set_repository __________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_05__set_repository>\nmock_msg = <MagicMock name='Msg' id='139646077855440'>\nmock_proxy = <MagicMock name='set_proxy' id='139646077884736'>\nmock_reg = <MagicMock name='set_registry' id='139646077954032'>\nmock_idx = <MagicMock name='set_index' id='139646077765520'>\n\n    @patch('udocker.cli.DockerIoAPI.set_index')\n    @patch('udocker.cli.DockerIoAPI.set_registry')\n    @patch('udocker.cli.DockerIoAPI.set_proxy')\n    @patch('udocker.cli.Msg')\n    def test_05__set_repository(self, mock_msg, mock_proxy,\n                                mock_reg, mock_idx):\n        \"\"\"Test05 UdockerCLI()._set_repository().\"\"\"\n        mock_msg.level = 0\n        regist = \"registry.io\"\n        idxurl = \"dockerhub.io\"\n        imgrepo = \"dockerhub.io/myimg:1.2\"\n        mock_proxy.return_value = None\n        mock_reg.side_effect = [None, None, None, None]\n        mock_idx.side_effect = [None, None, None, None]\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2db9b50>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ UdockerCLITestCase.test_06__split_imagespec __________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_06__split_imagespec>\n\n    def test_06__split_imagespec(self):\n        \"\"\"Test06 UdockerCLI()._split_imagespec().\"\"\"\n        imgrepo = \"\"\n        res = (\"\", \"\", \"\", \"\")\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2deafa0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_07_do_mkrepo _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_07_do_mkrepo>\nmock_msg = <MagicMock name='Msg' id='139646072584608'>\nmock_exists = <MagicMock name='exists' id='139646077692416'>\n\n    @patch('udocker.cli.os.path.exists')\n    @patch('udocker.cli.Msg')\n    def test_07_do_mkrepo(self, mock_msg, mock_exists):\n        \"\"\"Test07 UdockerCLI().do_mkrepo().\"\"\"\n        mock_msg.level = 0\n    \n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n        mock_exists.return_value = True\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2ebf520>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ UdockerCLITestCase.test_10__list_tags _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_10__list_tags>\nmock_gettags = <MagicMock name='get_tags' id='139646078057872'>\n\n    @patch('udocker.cli.DockerIoAPI.get_tags')\n    def test_10__list_tags(self, mock_gettags):\n        \"\"\"Test10 UdockerCLI()._list_tags().\"\"\"\n        mock_gettags.return_value = [\"t1\"]\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dfa100>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_11_do_search _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_11_do_search>\nmock_setrepo = <MagicMock name='_set_repository' id='139646089906208'>\nmock_split = <MagicMock name='_split_imagespec' id='139646078083904'>\nmock_listtags = <MagicMock name='_list_tags' id='139646078071904'>\nmock_searchrepo = <MagicMock name='_search_repositories' id='139646077715168'>\nmock_doiasearch = <MagicMock name='search_init' id='139646084150704'>\nmock_doiasetv2 = <MagicMock name='set_v2_login_token' id='139646077897120'>\nmock_ksget = <MagicMock name='get' id='139646078005600'>\n\n    @patch('udocker.cli.KeyStore.get')\n    @patch('udocker.cli.DockerIoAPI.set_v2_login_token')\n    @patch('udocker.cli.DockerIoAPI.search_init')\n    @patch.object(UdockerCLI, '_search_repositories')\n    @patch.object(UdockerCLI, '_list_tags')\n    @patch.object(UdockerCLI, '_split_imagespec')\n    @patch.object(UdockerCLI, '_set_repository')\n    def test_11_do_search(self, mock_setrepo, mock_split, mock_listtags,\n                          mock_searchrepo, mock_doiasearch, mock_doiasetv2,\n                          mock_ksget):\n        \"\"\"Test11 UdockerCLI().do_search().\"\"\"\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:269: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dfa190>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ UdockerCLITestCase.test_12_do_load ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_12_do_load>\nmock_chkimg = <MagicMock name='_check_imagerepo' id='139646077725520'>\nmock_load = <MagicMock name='load' id='139646077735600'>\nmock_msg = <MagicMock name='Msg' id='139646077764128'>\n\n    @patch('udocker.cli.Msg')\n    @patch('udocker.cli.LocalFileAPI.load')\n    @patch.object(UdockerCLI, '_check_imagerepo')\n    def test_12_do_load(self, mock_chkimg, mock_load, mock_msg):\n        \"\"\"Test12 UdockerCLI().do_load().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2d3c640>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ UdockerCLITestCase.test_13_do_save ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_13_do_save>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646078039424'>\nmock_save = <MagicMock name='save' id='139646090105376'>\nmock_exists = <MagicMock name='exists' id='139646089987888'>\nmock_msg = <MagicMock name='Msg' id='139646089902880'>\n\n    @patch('udocker.cli.Msg')\n    @patch('udocker.cli.os.path.exists')\n    @patch('udocker.cli.LocalFileAPI.save')\n    @patch.object(UdockerCLI, '_check_imagespec')\n    def test_13_do_save(self, mock_chkimg, mock_save, mock_exists, mock_msg):\n        \"\"\"Test13 UdockerCLI().do_save().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:356: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39e07f0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_14_do_import _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_14_do_import>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646077225952'>\nmock_msg = <MagicMock name='Msg' id='139646077826000'>\nmock_impclone = <MagicMock name='import_clone' id='139646078008720'>\nmock_impcont = <MagicMock name='import_tocontainer' id='139646077738192'>\nmock_impimg = <MagicMock name='import_toimage' id='139646077824640'>\n\n    @patch('udocker.cli.LocalFileAPI.import_toimage')\n    @patch('udocker.cli.LocalFileAPI.import_tocontainer')\n    @patch('udocker.cli.LocalFileAPI.import_clone')\n    @patch('udocker.cli.Msg')\n    @patch.object(UdockerCLI, '_check_imagespec')\n    def test_14_do_import(self, mock_chkimg, mock_msg, mock_impclone,\n                          mock_impcont, mock_impimg):\n        \"\"\"Test14 UdockerCLI().do_import().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:407: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e33d70d0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_15_do_export _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_15_do_export>\nmock_cs = <MagicMock name='ContainerStructure' id='139646077690160'>\nmock_msg = <MagicMock name='Msg' id='139646077671120'>\n\n    @patch('udocker.cli.Msg')\n    @patch('udocker.cli.ContainerStructure')\n    def test_15_do_export(self, mock_cs, mock_msg):\n        \"\"\"Test15 UdockerCLI().do_export().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:465: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e0e550>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_16_do_clone ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_16_do_clone>\nmock_msg = <MagicMock name='Msg' id='139646076561584'>\nmock_clone = <MagicMock name='clone_container' id='139646090066816'>\n\n    @patch('udocker.cli.LocalFileAPI.clone_container')\n    @patch('udocker.cli.Msg')\n    def test_16_do_clone(self, mock_msg, mock_clone):\n        \"\"\"Test16 UdockerCLI().do_clone().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:515: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dee520>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_17_do_login ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_17_do_login>\nmock_setrepo = <MagicMock name='_set_repository' id='139646077907488'>\nmock_dioalog = <MagicMock name='get_v2_login_token' id='139646078074256'>\nmock_ksput = <MagicMock name='put' id='139646075616896'>\nmock_msg = <MagicMock name='Msg' id='139646078034224'>\n\n    @patch('udocker.cli.Msg')\n    @patch('udocker.cli.KeyStore.put')\n    @patch('udocker.cli.DockerIoAPI.get_v2_login_token')\n    @patch.object(UdockerCLI, '_set_repository')\n    def test_17_do_login(self, mock_setrepo, mock_dioalog,\n                         mock_ksput, mock_msg):\n        \"\"\"Test17 UdockerCLI().do_login().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:550: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2de0550>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_18_do_logout _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_18_do_logout>\nmock_setrepo = <MagicMock name='_set_repository' id='139646084020352'>\nmock_ks = <MagicMock name='KeyStore' id='139646089980224'>\nmock_msg = <MagicMock name='Msg' id='139646078008336'>\n\n    @patch('udocker.cli.Msg')\n    @patch('udocker.cli.KeyStore')\n    @patch.object(UdockerCLI, '_set_repository')\n    def test_18_do_logout(self, mock_setrepo, mock_ks, mock_msg):\n        \"\"\"Test18 UdockerCLI().do_logout().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:591: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e33d7f40>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_21_do_create _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_21_do_create>\nmock_msg = <MagicMock name='Msg' id='139646078057152'>\nmock_create = <MagicMock name='_create' id='139646077823152'>\n\n    @patch.object(UdockerCLI, '_create')\n    @patch('udocker.cli.Msg')\n    def test_21_do_create(self, mock_msg, mock_create):\n        \"\"\"Test21 UdockerCLI().do_create().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:699: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2ddd5e0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ UdockerCLITestCase.test_23_do_run _______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_23_do_run>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646077714832'>\nmock_create = <MagicMock name='_create' id='139646090439600'>\nmock_pull = <MagicMock name='do_pull' id='139646089898112'>\nmock_msg = <MagicMock name='Msg' id='139646078083424'>\nmock_exec = <MagicMock name='ExecutionMode' id='139646077724416'>\n\n    @patch('udocker.cli.ExecutionMode')\n    @patch('udocker.cli.Msg')\n    @patch.object(UdockerCLI, 'do_pull')\n    @patch.object(UdockerCLI, '_create')\n    @patch.object(UdockerCLI, '_check_imagespec')\n    def test_23_do_run(self, mock_chkimg, mock_create, mock_pull,\n                       mock_msg, mock_exec):\n        \"\"\"Test23 UdockerCLI().do_run().\"\"\"\n        mock_msg.level = 0\n        mock_pull.return_value = None\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:748: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dd4b20>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_24_do_images _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_24_do_images>\n\n    def test_24_do_images(self):\n        \"\"\"Test24 UdockerCLI().do_images().\"\"\"\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:813: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e667f0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_______________________ UdockerCLITestCase.test_25_do_ps _______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_25_do_ps>\nmock_exec = <MagicMock name='ExecutionMode' id='139646078008144'>\n\n    @patch('udocker.cli.ExecutionMode')\n    def test_25_do_ps(self, mock_exec):\n        \"\"\"Test25 UdockerCLI().do_ps().\"\"\"\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:838: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3954b80>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_______________________ UdockerCLITestCase.test_26_do_rm _______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_26_do_rm>\nmock_msg = <MagicMock name='Msg' id='139646078810528'>\n\n    @patch('udocker.cli.Msg')\n    def test_26_do_rm(self, mock_msg):\n        \"\"\"Test26 UdockerCLI().do_rm().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:867: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3957970>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ UdockerCLITestCase.test_27_do_rmi _______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_27_do_rmi>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646077897216'>\nmock_msg = <MagicMock name='Msg' id='139646090480704'>\n\n    @patch('udocker.cli.Msg')\n    @patch.object(UdockerCLI, '_check_imagespec')\n    def test_27_do_rmi(self, mock_chkimg, mock_msg):\n        \"\"\"Test27 UdockerCLI().do_rmi().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:929: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2ff9880>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ UdockerCLITestCase.test_28_do_protect _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_28_do_protect>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646078006800'>\nmock_msg = <MagicMock name='Msg' id='139646077736992'>\n\n    @patch('udocker.cli.Msg')\n    @patch.object(UdockerCLI, '_check_imagespec')\n    def test_28_do_protect(self, mock_chkimg, mock_msg):\n        \"\"\"Test28 UdockerCLI().do_protect().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:984: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39d9f10>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ UdockerCLITestCase.test_29_do_unprotect ____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_29_do_unprotect>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646077687552'>\nmock_msg = <MagicMock name='Msg' id='139646075332736'>\n\n    @patch('udocker.cli.Msg')\n    @patch.object(UdockerCLI, '_check_imagespec')\n    def test_29_do_unprotect(self, mock_chkimg, mock_msg):\n        \"\"\"Test29 UdockerCLI().do_unprotect().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1050: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39dd460>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ UdockerCLITestCase.test_30_do_name ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_30_do_name>\nmock_msg = <MagicMock name='Msg' id='139646090438256'>\n\n    @patch('udocker.cli.Msg')\n    def test_30_do_name(self, mock_msg):\n        \"\"\"Test30 UdockerCLI().do_name().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e33b7520>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_31_do_rename _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_31_do_rename>\nmock_msg = <MagicMock name='Msg' id='139646089907264'>\n\n    @patch('udocker.cli.Msg')\n    def test_31_do_rename(self, mock_msg):\n        \"\"\"Test31 UdockerCLI().do_rename().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2c9ae80>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_32_do_rmname _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_32_do_rmname>\nmock_msg = <MagicMock name='Msg' id='139646078071424'>\n\n    @patch('udocker.cli.Msg')\n    def test_32_do_rmname(self, mock_msg):\n        \"\"\"Test32 UdockerCLI().do_rmname().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1217: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2db6b20>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ UdockerCLITestCase.test_33_do_inspect _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_33_do_inspect>\nmock_msg = <MagicMock name='Msg' id='139646075614256'>\nmock_csattr = <MagicMock name='get_container_attr' id='139646089991072'>\nmock_jdump = <MagicMock name='dumps' id='139646090450640'>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646090111632'>\n\n    @patch.object(UdockerCLI, '_check_imagespec')\n    @patch('udocker.cli.json.dumps')\n    @patch('udocker.cli.ContainerStructure.get_container_attr')\n    @patch('udocker.cli.Msg')\n    def test_33_do_inspect(self, mock_msg, mock_csattr, mock_jdump,\n                           mock_chkimg):\n        \"\"\"Test33 UdockerCLI().do_inspect().\"\"\"\n        cont_insp = {\n            \"architecture\": \"amd64\",\n            \"config\": {\n                \"AttachStderr\": False,\n                \"AttachStdin\": False,\n                \"AttachStdout\": False,\n                \"Cmd\": [\n                    \"/bin/bash\"\n                ],\n                \"Domainname\": \"\",\n                \"Entrypoint\": None,\n                \"Env\": [\n                    \"PATH=/usr/local/sbin\"\n                ],\n                \"Hostname\": \"\",\n                \"Image\": \"sha256:05725a\",\n                \"Labels\": {\n                    \"org.opencontainers.image.vendor\": \"CentOS\"\n                },\n                \"WorkingDir\": \"\"\n            },\n            \"container\": \"c171c\",\n            \"container_config\": {\n                \"ArgsEscaped\": True,\n                \"Cmd\": [\"/bin/sh\", \"-c\"],\n                \"Domainname\": \"\",\n                \"Env\": [\n                    \"PATH=/usr/local/sbin\"\n                ],\n                \"Hostname\": \"c171c5a1528a\",\n                \"Image\": \"sha256:05725a\",\n                \"Labels\": {\n                    \"org.label-schema.license\": \"GPLv2\",\n                    \"org.label-schema.name\": \"CentOS Base Image\",\n                    \"org.opencontainers.image.vendor\": \"CentOS\"\n                },\n                \"WorkingDir\": \"\"\n            },\n            \"created\": \"2020-05-05T21\",\n            \"docker_version\": \"18.09.7\",\n            \"id\": \"e72c1\",\n            \"os\": \"linux\",\n            \"parent\": \"61dc7\"\n        }\n    \n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n        self.local.get_container_id.return_value = \"\"\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1304: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2ff82b0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_34_do_verify _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_34_do_verify>\nmock_msg = <MagicMock name='Msg' id='139646076018112'>\nmock_chkimg = <MagicMock name='_check_imagespec' id='139646077952784'>\n\n    @patch.object(UdockerCLI, '_check_imagespec')\n    @patch('udocker.cli.Msg')\n    def test_34_do_verify(self, mock_msg, mock_chkimg):\n        \"\"\"Test34 UdockerCLI().do_verify().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n        mock_chkimg.return_value = (\"ipyrad\", \"latest\")\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1352: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2a23dc0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerCLITestCase.test_35_do_setup ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_35_do_setup>\nmock_msg = <MagicMock name='Msg' id='139646090064128'>\nmock_fb = <MagicMock name='FileBind' id='139646077692704'>\nmock_mp = <MagicMock name='MountPoint' id='139646089914208'>\nmock_unshr = <MagicMock name='namespace_exec' id='139646090477920'>\nmock_furchmod = <MagicMock name='rchmod' id='139646079030752'>\nmock_nv = <MagicMock name='NvidiaMode' id='139646090466160'>\nmock_execm = <MagicMock name='ExecutionMode' id='139646075497632'>\n\n    @patch('udocker.cli.ExecutionMode')\n    @patch('udocker.cli.NvidiaMode')\n    @patch('udocker.cli.FileUtil.rchmod')\n    @patch('udocker.cli.Unshare.namespace_exec')\n    @patch('udocker.cli.MountPoint')\n    @patch('udocker.cli.FileBind')\n    @patch('udocker.cli.Msg')\n    def test_35_do_setup(self, mock_msg, mock_fb, mock_mp,\n                         mock_unshr, mock_furchmod, mock_nv, mock_execm):\n        \"\"\"Test35 UdockerCLI().do_setup().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1389: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39522b0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ UdockerCLITestCase.test_36_do_install _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_36_do_install>\nmock_msg = <MagicMock name='Msg' id='139646078081344'>\nmock_utools = <MagicMock name='UdockerTools' id='139646090112832'>\n\n    @patch('udocker.cli.UdockerTools')\n    @patch('udocker.cli.Msg')\n    def test_36_do_install(self, mock_msg, mock_utools):\n        \"\"\"Test36 UdockerCLI().do_install().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1469: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39d9ac0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ UdockerCLITestCase.test_37_do_showconf ____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_37_do_showconf>\nmock_msg = <MagicMock name='Msg' id='139646089980560'>\n\n    @patch('udocker.cli.Msg')\n    def test_37_do_showconf(self, mock_msg):\n        \"\"\"Test37 UdockerCLI().do_showconf().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"showconf\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1498: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2f01130>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ UdockerCLITestCase.test_38_do_version _____________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_38_do_version>\nmock_msg = <MagicMock name='Msg' id='139646075332016'>\n\n    @patch('udocker.cli.Msg')\n    def test_38_do_version(self, mock_msg):\n        \"\"\"Test38 UdockerCLI().do_version().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"version\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1510: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e0e2e0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ UdockerCLITestCase.test_39_do_help ______________________\n\nself = <test_cli.UdockerCLITestCase testMethod=test_39_do_help>\nmock_msg = <MagicMock name='Msg' id='139646076820304'>\n\n    @patch('udocker.cli.Msg')\n    def test_39_do_help(self, mock_msg):\n        \"\"\"Test39 UdockerCLI().do_help().\"\"\"\n        mock_msg.level = 0\n        argv = [\"udocker\", \"-h\"]\n        cmdp = CmdParser()\n        cmdp.parse(argv)\n>       udoc = UdockerCLI(self.local)\n\ntests/unit/test_cli.py:1522: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/cli.py:47: in __init__\n    self.dockerioapi = DockerIoAPI(self.localrepo)\nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e395f7c0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ GetURLTestCase.test_03_get_content_length ___________________\n\nself = <test_curl.GetURLTestCase testMethod=test_03_get_content_length>\n\n    def test_03_get_content_length(self):\n        \"\"\"Test03 GetURL().get_content_length().\"\"\"\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"content-length\": 10, }\n>       geturl = GetURL()\n\ntests/unit/test_curl.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2fd8e50>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ GetURLTestCase.test_04_set_insecure ______________________\n\nself = <test_curl.GetURLTestCase testMethod=test_04_set_insecure>\nmock_gupycurl = <MagicMock name='is_available' id='139646077931632'>\n\n    @patch.object(GetURLpyCurl, 'is_available')\n    def test_04_set_insecure(self, mock_gupycurl):\n        \"\"\"Test04 GetURL().set_insecure().\"\"\"\n        mock_gupycurl.return_value = True\n>       geturl = GetURL()\n\ntests/unit/test_curl.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2de9fa0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_______________________ GetURLTestCase.test_05_set_proxy _______________________\n\nself = <test_curl.GetURLTestCase testMethod=test_05_set_proxy>\nmock_gupycurl = <MagicMock name='is_available' id='139646079924736'>\n\n    @patch.object(GetURLpyCurl, 'is_available')\n    def test_05_set_proxy(self, mock_gupycurl):\n        \"\"\"Test05 GetURL().set_proxy().\"\"\"\n        mock_gupycurl.return_value = True\n>       geturl = GetURL()\n\ntests/unit/test_curl.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2fcf6a0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________________ GetURLTestCase.test_06_get __________________________\n\nself = <test_curl.GetURLTestCase testMethod=test_06_get>\n\n    def test_06_get(self):\n        \"\"\"Test06 GetURL().get().\"\"\"\n>       geturl = GetURL()\n\ntests/unit/test_curl.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e0ba00>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________________ GetURLTestCase.test_07_post __________________________\n\nself = <test_curl.GetURLTestCase testMethod=test_07_post>\n\n    def test_07_post(self):\n        \"\"\"Test07 GetURL().post().\"\"\"\n>       geturl = GetURL()\n\ntests/unit/test_curl.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2a23520>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ DockerIoAPITestCase.test_03_set_registry ___________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_03_set_registry>\n\n    def test_03_set_registry(self):\n        \"\"\"Test03 DockerIoAPI().set_registry().\"\"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2b9b1f0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ DockerIoAPITestCase.test_04_set_index _____________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_04_set_index>\n\n    def test_04_set_index(self):\n        \"\"\"Test04 DockerIoAPI().set_index().\"\"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e33ce070>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ DockerIoAPITestCase.test_05_is_repo_name ___________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_05_is_repo_name>\n\n    def test_05_is_repo_name(self):\n        \"\"\"Test05 DockerIoAPI().is_repo_name().\"\"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dce670>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ DockerIoAPITestCase.test_06__get_url _____________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_06__get_url>\nmock_get = <MagicMock name='get' id='139646078041008'>\nmock_getstatus = <MagicMock name='get_status_code' id='139646079081056'>\n\n    @patch('udocker.docker.GetURL.get_status_code')\n    @patch('udocker.docker.GetURL.get')\n    def test_06__get_url(self, mock_get, mock_getstatus):\n        \"\"\"Test06 DockerIoAPI()._get_url().\"\"\"\n        args = [\"http://some1.org\"]\n        kwargs = list()\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\"}\n        buff = strio()\n        mock_get.return_value = (hdr, buff)\n        mock_getstatus.return_value = 200\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39772b0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ DockerIoAPITestCase.test_07__get_file _____________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_07__get_file>\nmock_hash = <MagicMock name='hash' id='139646089979456'>\nmock_getlength = <MagicMock name='get_content_length' id='139646089936960'>\nmock_fusize = <MagicMock name='size' id='139646076015424'>\nmock_status = <MagicMock name='get_status_code' id='139646072583456'>\nmock_geturl = <MagicMock name='_get_url' id='139646080144288'>\n\n    @patch.object(DockerIoAPI, '_get_url')\n    @patch('udocker.docker.GetURL.get_status_code')\n    @patch('udocker.docker.FileUtil.size')\n    @patch('udocker.docker.GetURL.get_content_length')\n    @patch('udocker.docker.ChkSUM.hash')\n    def test_07__get_file(self, mock_hash, mock_getlength,\n                          mock_fusize, mock_status, mock_geturl):\n        \"\"\"Test07 DockerIoAPI()._get_file().\"\"\"\n        cks = \"af98ca7807fd3859c5bd876004fa7e960cecebddb342de1bc7f3b0e6f7dab415\"\n        url = \"http://some1.org/file1\"\n        fname = \"/sha256:\" + cks\n        cache = 0\n        mock_hash.return_value = cks\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2d08670>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ DockerIoAPITestCase.test_08__split_fields ___________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_08__split_fields>\n\n    def test_08__split_fields(self):\n        \"\"\"Test08 DockerIoAPI()._split_fields().\"\"\"\n        buff = 'k1=\"v1\",k2=\"v2\"'\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e65460>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ DockerIoAPITestCase.test_09_is_v1 _______________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_09_is_v1>\nmock_geturl = <MagicMock name='_get_url' id='139646075825264'>\n\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_09_is_v1(self, mock_geturl):\n        \"\"\"Test09 DockerIoAPI().is_v1().\"\"\"\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0}\n        buff = strio()\n        mock_geturl.return_value = (hdr, buff)\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3962df0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ DockerIoAPITestCase.test_10_has_search_v1 ___________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_10_has_search_v1>\nmock_geturl = <MagicMock name='_get_url' id='139646089965472'>\n\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_10_has_search_v1(self, mock_geturl):\n        \"\"\"Test10 DockerIoAPI().has_search_v1().\"\"\"\n        url = \"http://some1.org/file1\"\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0}\n        buff = strio()\n        mock_geturl.return_value = (hdr, buff)\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:220: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2cf7460>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ DockerIoAPITestCase.test_11_get_v1_repo ____________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_11_get_v1_repo>\nmock_geturl = <MagicMock name='_get_url' id='139646073978352'>\nmock_jload = <MagicMock name='loads' id='139646078928112'>\n\n    @patch('udocker.docker.json.loads')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_11_get_v1_repo(self, mock_geturl, mock_jload):\n        \"\"\"Test11 DockerIoAPI().get_v1_repo\"\"\"\n        imagerepo = \"REPO\"\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"x-docker-token\": \"12345\"}\n        buff = strio()\n        mock_geturl.return_value = (hdr, buff)\n        mock_jload.return_value = {\"k1\": \"v1\"}\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3112400>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ DockerIoAPITestCase.test_12__get_v1_auth ___________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_12__get_v1_auth>\n\n    def test_12__get_v1_auth(self):\n        \"\"\"Test12 DockerIoAPI()._get_v1_auth\"\"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:251: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e02190>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_13_get_v1_image_tags _________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_13_get_v1_image_tags>\nmock_dgu = <MagicMock name='_get_url' id='139646078725280'>\nmock_hdr = <MagicMock name='CurlHeader' id='139646075950944'>\nmock_msg = <MagicMock name='Msg' id='139646079032528'>\n\n    @patch('udocker.docker.Msg')\n    @patch('udocker.utils.curl.CurlHeader')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_13_get_v1_image_tags(self, mock_dgu, mock_hdr, mock_msg):\n        \"\"\"Test13 DockerIoAPI().get_v1_image_tags\"\"\"\n        mock_msg.level = 0\n        mock_dgu.return_value = (mock_hdr, [])\n        endpoint = \"docker.io\"\n        imagerepo = \"REPO\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:272: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dcf4c0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ DockerIoAPITestCase.test_14_get_v1_image_tag _________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_14_get_v1_image_tag>\nmock_dgu = <MagicMock name='_get_url' id='139646078441792'>\nmock_hdr = <MagicMock name='CurlHeader' id='139646078085680'>\nmock_msg = <MagicMock name='Msg' id='139646084019680'>\n\n    @patch('udocker.docker.Msg')\n    @patch('udocker.utils.curl.CurlHeader')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_14_get_v1_image_tag(self, mock_dgu, mock_hdr, mock_msg):\n        \"\"\"Test14 DockerIoAPI().get_v1_image_tag\"\"\"\n        mock_msg.level = 0\n        mock_dgu.return_value = (mock_hdr, [])\n        endpoint = \"docker.io\"\n        imagerepo = \"REPO\"\n        tag = \"TAG\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:286: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e0d760>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________ DockerIoAPITestCase.test_15_get_v1_image_ancestry _______________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_15_get_v1_image_ancestry>\nmock_dgu = <MagicMock name='_get_url' id='139646090002192'>\nmock_hdr = <MagicMock name='CurlHeader' id='139646076818432'>\nmock_msg = <MagicMock name='Msg' id='139646077742000'>\n\n    @patch('udocker.docker.Msg')\n    @patch('udocker.utils.curl.CurlHeader')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_15_get_v1_image_ancestry(self, mock_dgu, mock_hdr, mock_msg):\n        \"\"\"Test15 DockerIoAPI().get_v1_image_ancestry\"\"\"\n        mock_msg.level = 0\n        mock_dgu.return_value = (mock_hdr, [])\n        endpoint = \"docker.io\"\n        image_id = \"IMAGEID\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:299: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2da1d30>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_16_get_v1_image_json _________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_16_get_v1_image_json>\nmock_dgf = <MagicMock name='_get_file' id='139646078928784'>\nmock_msg = <MagicMock name='Msg' id='139646090066192'>\n\n    @patch('udocker.docker.Msg')\n    @patch.object(DockerIoAPI, '_get_file')\n    def test_16_get_v1_image_json(self, mock_dgf, mock_msg):\n        \"\"\"Test16 DockerIoAPI().get_v1_image_json\"\"\"\n        mock_msg.level = 0\n        mock_dgf.return_value = True\n        endpoint = \"docker.io\"\n        layer_id = \"LAYERID\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2cfa730>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_17_get_v1_image_layer ________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_17_get_v1_image_layer>\nmock_dgf = <MagicMock name='_get_file' id='139646078037008'>\nmock_msg = <MagicMock name='Msg' id='139646076985296'>\n\n    @patch('udocker.docker.Msg')\n    @patch.object(DockerIoAPI, '_get_file')\n    def test_17_get_v1_image_layer(self, mock_dgf, mock_msg):\n        \"\"\"Test17 DockerIoAPI().get_v1_image_layer\"\"\"\n        mock_msg.level = 0\n        mock_dgf.return_value = True\n        endpoint = \"docker.io\"\n        layer_id = \"LAYERID\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:328: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3977df0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_18_get_v1_layers_all _________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_18_get_v1_layers_all>\nmock_dgf = <MagicMock name='_get_file' id='139646089940944'>\nmock_msg = <MagicMock name='Msg' id='139646073211680'>\n\n    @patch('udocker.docker.Msg')\n    @patch.object(DockerIoAPI, '_get_file')\n    def test_18_get_v1_layers_all(self, mock_dgf, mock_msg):\n        \"\"\"Test18 DockerIoAPI().get_v1_layers_all\"\"\"\n        mock_msg.level = 0\n        mock_dgf.return_value = True\n        endpoint = \"docker.io\"\n        layer_list = []\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3956250>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ DockerIoAPITestCase.test_19__get_v2_auth ___________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_19__get_v2_auth>\nmock_jloads = <MagicMock name='loads' id='139646075950560'>\nmock_hdr = <MagicMock name='CurlHeader' id='139646077936016'>\nmock_dgu = <MagicMock name='_get_url' id='139646089972656'>\n\n    @patch.object(DockerIoAPI, '_get_url')\n    @patch('udocker.utils.curl.CurlHeader')\n    @patch('udocker.docker.json.loads')\n    def test_19__get_v2_auth(self, mock_jloads, mock_hdr, mock_dgu):\n        \"\"\"Test19 DockerIoAPI()._get_v2_auth\"\"\"\n        fakedata = strio('token'.encode('utf-8'))\n        www_authenticate = \"Other Stuff\"\n        mock_dgu.return_value = (mock_hdr, fakedata)\n        mock_jloads.return_value = {'token': 'YYY'}\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:363: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dfb220>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_20_get_v2_login_token ________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_20_get_v2_login_token>\n\n    def test_20_get_v2_login_token(self):\n        \"\"\"Test20 DockerIoAPI().get_v2_login_token\"\"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:385: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2db4400>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_21_set_v2_login_token ________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_21_set_v2_login_token>\n\n    def test_21_set_v2_login_token(self):\n        \"\"\"Test21 DockerIoAPI().set_v2_login_token\"\"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:395: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2de37c0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ DockerIoAPITestCase.test_22_is_v2 _______________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_22_is_v2>\nmock_dgu = <MagicMock name='_get_url' id='139646078006176'>\nmock_hdr = <MagicMock name='CurlHeader' id='139646076910896'>\n\n    @patch('udocker.utils.curl.CurlHeader')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_22_is_v2(self, mock_dgu, mock_hdr):\n        \"\"\"Test22 DockerIoAPI().is_v2\"\"\"\n        mock_dgu.return_value = (mock_hdr, [])\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e293f4f0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ DockerIoAPITestCase.test_23_has_search_v2 ___________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_23_has_search_v2>\nmock_dgu = <MagicMock name='_get_url' id='139646075906560'>\n\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_23_has_search_v2(self, mock_dgu):\n        \"\"\"Test23 DockerIoAPI().has_search_v2\"\"\"\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 400 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0}\n        buff = strio()\n        mock_dgu.return_value = (hdr, buff)\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:429: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e396bf40>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_24_get_v2_image_tags _________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_24_get_v2_image_tags>\nmock_dgu = <MagicMock name='_get_url' id='139646076828544'>\nmock_jload = <MagicMock name='loads' id='139646078072864'>\n\n    @patch('udocker.docker.json.loads')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_24_get_v2_image_tags(self, mock_dgu, mock_jload):\n        \"\"\"Test24 DockerIoAPI().get_v2_image_tags\"\"\"\n        imgrepo = \"img1\"\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0}\n        buff = strio()\n        mock_dgu.return_value = (hdr, buff)\n        mock_jload.return_value = list()\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:457: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2befeb0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________ DockerIoAPITestCase.test_25_get_v2_image_manifest _______________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_25_get_v2_image_manifest>\nmock_dgu = <MagicMock name='_get_url' id='139646076956384'>\nmock_hdr = <MagicMock name='CurlHeader' id='139646077637200'>\nmock_msg = <MagicMock name='Msg' id='139646075807680'>\n\n    @patch('udocker.docker.Msg')\n    @patch('udocker.utils.curl.CurlHeader')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_25_get_v2_image_manifest(self, mock_dgu, mock_hdr, mock_msg):\n        \"\"\"Test25 DockerIoAPI().get_v2_image_manifest\"\"\"\n        mock_msg.level = 0\n        imagerepo = \"REPO\"\n        tag = \"TAG\"\n        mock_dgu.return_value = (mock_hdr, [])\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:484: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e33ce610>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_26_get_v2_image_layer ________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_26_get_v2_image_layer>\nmock_dgf = <MagicMock name='_get_file' id='139646078442128'>\nmock_msg = <MagicMock name='Msg' id='139646078834384'>\n\n    @patch('udocker.docker.Msg')\n    @patch.object(DockerIoAPI, '_get_file')\n    def test_26_get_v2_image_layer(self, mock_dgf, mock_msg):\n        \"\"\"Test26 DockerIoAPI().get_v2_image_layer\"\"\"\n        mock_msg.level = 0\n        imagerepo = \"REPO\"\n        layer_id = \"LAYERID\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:496: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39856d0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_27_get_v2_layers_all _________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_27_get_v2_layers_all>\nmock_v2il = <MagicMock name='get_v2_image_layer' id='139646076818960'>\nmock_msg = <MagicMock name='Msg' id='139646089989040'>\n\n    @patch('udocker.docker.Msg')\n    @patch.object(DockerIoAPI, 'get_v2_image_layer')\n    def test_27_get_v2_layers_all(self, mock_v2il, mock_msg):\n        \"\"\"Test27 DockerIoAPI().get_v2_layers_all\"\"\"\n        mock_msg.level = 0\n        mock_v2il.return_value = False\n        imagerepo = \"REPO\"\n        fslayers = []\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:517: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3962f40>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ DockerIoAPITestCase.test_28_get_v2 ______________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_28_get_v2>\nmock_dgu = <MagicMock name='_get_url' id='139646073043504'>\nmock_dgv2 = <MagicMock name='get_v2_layers_all' id='139646080146688'>\nmock_manif = <MagicMock name='get_v2_image_manifest' id='139646077821040'>\nmock_getstatus = <MagicMock name='get_status_code' id='139646080094800'>\nmock_msg = <MagicMock name='Msg' id='139646077907296'>\n\n    @patch('udocker.docker.Msg')\n    @patch('udocker.docker.GetURL.get_status_code')\n    @patch.object(DockerIoAPI, 'get_v2_image_manifest')\n    @patch.object(DockerIoAPI, 'get_v2_layers_all')\n    @patch.object(DockerIoAPI, '_get_url')\n    def test_28_get_v2(self, mock_dgu, mock_dgv2, mock_manif,\n                       mock_getstatus, mock_msg):\n        \"\"\"Test28 DockerIoAPI().get_v2\"\"\"\n        imgrepo = \"img1\"\n        hdr = type('test', (object,), {})()\n        hdr_data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0}\n        hdr.data = hdr_data\n        buff = strio()\n        manifest = list()\n        mock_msg.level = 0\n        mock_dgu.return_value = (hdr, buff)\n        mock_manif.return_value = (hdr_data, manifest)\n        mock_dgv2.return_value = []\n        mock_getstatus.return_value = 400\n        tag = \"TAG\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:551: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2de9850>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_______________ DockerIoAPITestCase.test_29__get_v1_id_from_tags _______________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_29__get_v1_id_from_tags>\n\n    def test_29__get_v1_id_from_tags(self):\n        \"\"\"Test29 DockerIoAPI()._get_v1_id_from_tags\"\"\"\n        tobj = {\"tag1\": \"t1\"}\n        tag = \"tag1\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:587: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2fd8dc0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________ DockerIoAPITestCase.test_30__get_v1_id_from_images ______________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_30__get_v1_id_from_images>\n\n    def test_30__get_v1_id_from_images(self):\n        \"\"\"Test30 DockerIoAPI()._get_v1_id_from_images\"\"\"\n        imgarr = list()\n        shortid = \"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:601: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2fd5610>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ DockerIoAPITestCase.test_31_get_v1 ______________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_31_get_v1>\nmock_dgv1repo = <MagicMock name='get_v1_repo' id='139646075824352'>\nmock_v1imgtag = <MagicMock name='get_v1_image_tags' id='139646089949296'>\nmock_v1idtag = <MagicMock name='_get_v1_id_from_tags' id='139646077955136'>\nmock_v1idimg = <MagicMock name='_get_v1_id_from_images' id='139646077933408'>\nmock_v1ances = <MagicMock name='get_v1_image_ancestry' id='139646077673184'>\nmock_v1layer = <MagicMock name='get_v1_layers_all' id='139646079032096'>\nmock_status = <MagicMock name='get_status_code' id='139646090048704'>\nmock_msg = <MagicMock name='Msg' id='139646078036096'>\n\n    @patch('udocker.docker.Msg')\n    @patch('udocker.docker.GetURL.get_status_code')\n    @patch.object(DockerIoAPI, 'get_v1_layers_all')\n    @patch.object(DockerIoAPI, 'get_v1_image_ancestry')\n    @patch.object(DockerIoAPI, '_get_v1_id_from_images')\n    @patch.object(DockerIoAPI, '_get_v1_id_from_tags')\n    @patch.object(DockerIoAPI, 'get_v1_image_tags')\n    @patch.object(DockerIoAPI, 'get_v1_repo')\n    def test_31_get_v1(self, mock_dgv1repo, mock_v1imgtag,\n                       mock_v1idtag, mock_v1idimg, mock_v1ances,\n                       mock_v1layer, mock_status, mock_msg):\n        \"\"\"Test31 DockerIoAPI().get_v1\"\"\"\n        imgarr = [{\"id\": \"1234567890\"}]\n        imagerepo = \"REPO\"\n        tag = \"TAG\"\n        hdr = type('test', (object,), {})()\n        hdr_data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0,\n                    \"x-docker-endpoints\": \"https://registry-1.docker.io\"}\n        hdr.data = hdr_data\n        mock_msg.level = 0\n        mock_dgv1repo.return_value = (hdr_data, imgarr)\n        mock_status.return_value = 401\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:635: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e01dc0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ DockerIoAPITestCase.test_32__parse_imagerepo _________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_32__parse_imagerepo>\n\n    def test_32__parse_imagerepo(self):\n        \"\"\"Test32 DockerIoAPI()._parse_imagerepo\"\"\"\n        imagerepo = \"https://hub.docker.com/_/mysql\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:697: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2be65b0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_______________________ DockerIoAPITestCase.test_33_get ________________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_33_get>\nmock_parse = <MagicMock name='_parse_imagerepo' id='139646077886272'>\nmock_isv2 = <MagicMock name='is_v2' id='139646078057872'>\nmock_getv2 = <MagicMock name='get_v2' id='139646079164272'>\nmock_getv1 = <MagicMock name='get_v1' id='139646076416304'>\n\n    @patch.object(DockerIoAPI, 'get_v1')\n    @patch.object(DockerIoAPI, 'get_v2')\n    @patch.object(DockerIoAPI, 'is_v2')\n    @patch.object(DockerIoAPI, '_parse_imagerepo')\n    def test_33_get(self, mock_parse, mock_isv2, mock_getv2, mock_getv1):\n        \"\"\"Test33 DockerIoAPI().get\"\"\"\n        imagerepo = \"REPO\"\n        tag = \"TAG\"\n        mock_parse.return_value = (\"REPO\", \"https://registry-1.docker.io\")\n        self.local.cd_imagerepo.return_value = False\n        self.local.setup_imagerepo.return_value = True\n        self.local.del_imagerepo.return_value = False\n        mock_isv2.return_value = False\n        mock_getv1.return_value = [\"a\", \"b\"]\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:715: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39d9070>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ DockerIoAPITestCase.test_34_get_tags _____________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_34_get_tags>\nmock_isv2 = <MagicMock name='is_v2' id='139646089939312'>\nmock_getv2 = <MagicMock name='get_v2_image_tags' id='139646090122336'>\nmock_getv1 = <MagicMock name='get_v1_image_tags' id='139646089991984'>\n\n    @patch.object(DockerIoAPI, 'get_v1_image_tags')\n    @patch.object(DockerIoAPI, 'get_v2_image_tags')\n    @patch.object(DockerIoAPI, 'is_v2')\n    def test_34_get_tags(self, mock_isv2, mock_getv2, mock_getv1):\n        \"\"\"Test34 DockerIoAPI().get_tags\"\"\"\n        imagerepo = \"REPO\"\n        mock_isv2.return_value = False\n        mock_getv1.return_value = [\"a\", \"b\"]\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:737: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e65f70>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ DockerIoAPITestCase.test_35_search_init ____________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_35_search_init>\n\n    def test_35_search_init(self):\n        \"\"\"Test35 DockerIoAPI().search_init\"\"\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:749: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e33d7ee0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_36_search_get_page_v1 ________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_36_search_get_page_v1>\nmock_jload = <MagicMock name='loads' id='139646076015040'>\nmock_dgu = <MagicMock name='_get_url' id='139646079764176'>\n\n    @patch.object(DockerIoAPI, '_get_url')\n    @patch('udocker.docker.json.loads')\n    def test_36_search_get_page_v1(self, mock_jload, mock_dgu):\n        \"\"\"Test36 DockerIoAPI().set_index\"\"\"\n        hdr = type('test', (object,), {})()\n        hdr_data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0,\n                    \"x-docker-endpoints\": \"https://registry-1.docker.io\"}\n        hdr.data = hdr_data\n        buff = strio()\n        mock_dgu.return_value = (hdr, buff)\n        mock_jload.return_value = {\"page\": 1, \"num_pages\": 1}\n        url = \"https://registry-1.docker.io\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:769: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e01eb0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n________________ DockerIoAPITestCase.test_37_search_get_page_v2 ________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_37_search_get_page_v2>\nmock_jload = <MagicMock name='loads' id='139646089963312'>\nmock_dgu = <MagicMock name='_get_url' id='139646080146352'>\n\n    @patch.object(DockerIoAPI, '_get_url')\n    @patch('udocker.docker.json.loads')\n    def test_37_search_get_page_v2(self, mock_jload, mock_dgu):\n        \"\"\"Test37 DockerIoAPI().search_get_page_v2\"\"\"\n        hdr = type('test', (object,), {})()\n        hdr_data = {\"content-length\": 10,\n                    \"X-ND-HTTPSTATUS\": \"HTTP-Version 200 Reason-Phrase\",\n                    \"X-ND-CURLSTATUS\": 0,\n                    \"x-docker-endpoints\": \"https://registry-1.docker.io\"}\n        hdr.data = hdr_data\n        buff = strio()\n        mock_dgu.return_value = (hdr, buff)\n        mock_jload.return_value = {\"count\": 1, \"num_pages\": 1}\n        url = \"https://registry-1.docker.io\"\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:787: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2dee190>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ DockerIoAPITestCase.test_38_search_get_page __________________\n\nself = <test_dockerioapi.DockerIoAPITestCase testMethod=test_38_search_get_page>\nmock_searchv2 = <MagicMock name='has_search_v2' id='139646075429120'>\nmock_searchv1 = <MagicMock name='has_search_v1' id='139646089982640'>\nmock_getv2 = <MagicMock name='search_get_page_v2' id='139646075978464'>\nmock_getv1 = <MagicMock name='search_get_page_v1' id='139646089901728'>\n\n    @patch.object(DockerIoAPI, 'search_get_page_v1')\n    @patch.object(DockerIoAPI, 'search_get_page_v2')\n    @patch.object(DockerIoAPI, 'has_search_v1')\n    @patch.object(DockerIoAPI, 'has_search_v2')\n    def test_38_search_get_page(self, mock_searchv2, mock_searchv1,\n                                mock_getv2, mock_getv1):\n        \"\"\"Test38 DockerIoAPI().search_get_page\"\"\"\n        mock_searchv2.return_value = True\n        mock_searchv1.return_value = False\n        mock_getv2.return_value = {\"count\": 1, \"num_pages\": 1}\n        mock_getv1.return_value = {\"page\": 1, \"num_pages\": 1}\n>       doia = DockerIoAPI(self.local)\n\ntests/unit/test_dockerioapi.py:802: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/docker.py:32: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2de30d0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ GetURLTestCase.test_03_get_content_length ___________________\n\nself = <test_geturl.GetURLTestCase testMethod=test_03_get_content_length>\n\n    def test_03_get_content_length(self):\n        \"\"\"Test03 GetURL().get_content_length().\"\"\"\n        hdr = type('test', (object,), {})()\n        hdr.data = {\"content-length\": 10, }\n>       geturl = GetURL()\n\ntests/unit/test_geturl.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e28da580>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________________ GetURLTestCase.test_06_get __________________________\n\nself = <test_geturl.GetURLTestCase testMethod=test_06_get>\n\n    def test_06_get(self):\n        \"\"\"Test06 GetURL().get().\"\"\"\n>       geturl = GetURL()\n\ntests/unit/test_geturl.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e45310>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________________ GetURLTestCase.test_07_post __________________________\n\nself = <test_geturl.GetURLTestCase testMethod=test_07_post>\n\n    def test_07_post(self):\n        \"\"\"Test07 GetURL().post().\"\"\"\n>       geturl = GetURL()\n\ntests/unit/test_geturl.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e3954ca0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ GetURLTestCase.test_08_get_status_code ____________________\n\nself = <test_geturl.GetURLTestCase testMethod=test_08_get_status_code>\n\n    def test_08_get_status_code(self):\n        \"\"\"Test08 GetURL().get_status_code().\"\"\"\n        sline = \"HTTP-Version 400 Reason-Phrase\"\n>       geturl = GetURL()\n\ntests/unit/test_geturl.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e0e700>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n___________________ HostInfoTestCase.test_06_cmd_has_option ____________________\n\nself = <test_hostinfo.HostInfoTestCase testMethod=test_06_cmd_has_option>\n\n    def test_06_cmd_has_option(self):\n        \"\"\"Test06 HostInfo().cmd_has_option.\"\"\"\n        status = HostInfo().cmd_has_option(\"ls\", \"-a\")\n>       self.assertTrue(status)\nE       AssertionError: False is not true\n\ntests/unit/test_hostinfo.py:88: AssertionError\n__________________ UdockerToolsTestCase.test_02__instructions __________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_02__instructions>\nmock_msg = <MagicMock name='Msg' id='139646072525248'>\n\n    @patch('udocker.tools.Msg')\n    def test_02__instructions(self, mock_msg):\n        \"\"\"Test02 UdockerTools()._instructions().\"\"\"\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e28f9e80>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ UdockerToolsTestCase.test_03__version2int ___________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_03__version2int>\n\n    def test_03__version2int(self):\n        \"\"\"Test03 UdockerTools()._version2int().\"\"\"\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e33bc9a0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ UdockerToolsTestCase.test_04__version_isok __________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_04__version_isok>\n\n    def test_04__version_isok(self):\n        \"\"\"Test04 UdockerTools()._version_isok().\"\"\"\n        Config.conf['tarball_release'] = \"1.3\"\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2f7c8e0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ UdockerToolsTestCase.test_05_is_available ___________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_05_is_available>\nmock_fuget = <MagicMock name='getdata' id='139646073756928'>\n\n    @patch('udocker.tools.FileUtil.getdata')\n    def test_05_is_available(self, mock_fuget):\n        \"\"\"Test05 UdockerTools().is_available().\"\"\"\n        Config.conf['tarball_release'] = \"2.3\"\n        mock_fuget.return_value = \"2.3\\n\"\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e29edf70>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n______________________ UdockerToolsTestCase.test_06_purge ______________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_06_purge>\nmock_lsdir = <MagicMock name='listdir' id='139646077519376'>\nmock_fureg = <MagicMock name='register_prefix' id='139646090068704'>\nmock_furm = <MagicMock name='remove' id='139646072837072'>\n\n    @patch('udocker.tools.FileUtil.remove')\n    @patch('udocker.tools.FileUtil.register_prefix')\n    @patch('udocker.tools.os.listdir')\n    def test_06_purge(self, mock_lsdir, mock_fureg, mock_furm):\n        \"\"\"Test06 UdockerTools().purge().\"\"\"\n        mock_lsdir.side_effect = [[\"f1\", \"f2\"],\n                                  [\"f3\", \"f4\"],\n                                  [\"f5\", \"f6\"]]\n        mock_fureg.side_effect = [None, None, None, None, None, None]\n        mock_furm.side_effect = [None, None, None, None, None, None]\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2bcfb80>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n____________________ UdockerToolsTestCase.test_07__download ____________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_07__download>\nmock_fumktmp = <MagicMock name='mktmp' id='139646072673952'>\nmock_furm = <MagicMock name='remove' id='139646072787008'>\nmock_geturl = <MagicMock name='get' id='139646077241328'>\n\n    @patch('udocker.tools.GetURL.get')\n    @patch('udocker.tools.FileUtil.remove')\n    @patch('udocker.tools.FileUtil.mktmp')\n    def test_07__download(self, mock_fumktmp, mock_furm, mock_geturl):\n        \"\"\"Test07 UdockerTools()._download().\"\"\"\n        url = \"https://down/file\"\n        hdr = CurlHeader()\n        hdr.data[\"X-ND-HTTPSTATUS\"] = \"HTTP/1.1 200 OK\"\n        mock_fumktmp.return_value = \"/tmp/tmpf\"\n        mock_furm.return_value = None\n        mock_geturl.return_value = (hdr, \"content type...\")\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2e34700>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n__________________ UdockerToolsTestCase.test_11__get_mirrors ___________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_11__get_mirrors>\n\n    def test_11__get_mirrors(self):\n        \"\"\"Test11 UdockerTools()._get_mirrors().\"\"\"\n        mirrors = \"https://download.ncg.ingrid.pt/udocker-1.2.7.tar.gz\"\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:228: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2b86dc0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ UdockerToolsTestCase.test_12_get_installinfo _________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_12_get_installinfo>\nmock_jload = <MagicMock name='load' id='139646075740656'>\nmock_mirr = <MagicMock name='_get_mirrors' id='139646073626096'>\nmock_getf = <MagicMock name='_get_file' id='139646089898160'>\n\n    @patch.object(UdockerTools, '_get_file')\n    @patch.object(UdockerTools, '_get_mirrors')\n    @patch('udocker.tools.json.load')\n    def test_12_get_installinfo(self, mock_jload, mock_mirr, mock_getf):\n        \"\"\"Test12 UdockerTools().get_installinfo().\"\"\"\n        Config.conf['installinfo'] = \"/home/info.json\"\n        res = {\"tarversion\": \"1.2.7\"}\n        mock_jload.return_value = {\"tarversion\": \"1.2.7\"}\n        mock_mirr.return_value = [\"/home/info.json\"]\n        mock_getf.return_value = \"info.json\"\n        subuid_line = StringIO('{\"tarversion\": \"1.2.7\"}')\n        with patch(BOPEN) as mopen:\n            mopen.return_value.__iter__ = (\n                lambda self: iter(subuid_line.readline, ''))\n>           utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2949610>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_________________ UdockerToolsTestCase.test_13__install_logic __________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_13__install_logic>\nmock_furm = <MagicMock name='remove' id='139646078891632'>\nmock_getmirr = <MagicMock name='_get_mirrors' id='139646078810768'>\nmock_getfile = <MagicMock name='_get_file' id='139646077782000'>\nmock_verversion = <MagicMock name='_verify_version' id='139646077606064'>\nmock_install = <MagicMock name='_install' id='139646072789072'>\n\n    @patch.object(UdockerTools, '_install')\n    @patch.object(UdockerTools, '_verify_version')\n    @patch.object(UdockerTools, '_get_file')\n    @patch.object(UdockerTools, '_get_mirrors')\n    @patch('udocker.tools.FileUtil.remove')\n    def test_13__install_logic(self, mock_furm, mock_getmirr, mock_getfile,\n                               mock_verversion, mock_install):\n        \"\"\"Test13 UdockerTools()._install_logic().\"\"\"\n        mock_furm.return_value = None\n        mock_getmirr.return_value = \"https://down.pt/udocker-1.2.7.tar.gz\"\n        mock_getfile.return_value = \"udocker-1.2.7.tar.gz\"\n        mock_verversion.return_value = (True, \"1.2.7\")\n        mock_install.return_value = True\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:263: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e39e0790>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n_____________________ UdockerToolsTestCase.test_14_install _____________________\n\nself = <test_tools.UdockerToolsTestCase testMethod=test_14_install>\nmock_isavail = <MagicMock name='is_available' id='139646073167056'>\nmock_instlog = <MagicMock name='_install_logic' id='139646090102000'>\nmock_getinfo = <MagicMock name='get_installinfo' id='139646072866512'>\nmock_msg = <MagicMock name='Msg' id='139646074022640'>\n\n    @patch('udocker.tools.Msg')\n    @patch.object(UdockerTools, 'get_installinfo')\n    @patch.object(UdockerTools, '_install_logic')\n    @patch.object(UdockerTools, 'is_available')\n    def test_14_install(self, mock_isavail, mock_instlog,\n                        mock_getinfo, mock_msg):\n        \"\"\"Test14 UdockerTools().install().\"\"\"\n        mock_msg.level = 0\n        Config.conf['autoinstall'] = True\n        Config.conf['tarball'] = \"udocker-1.2.7.tar.gz\"\n        Config.conf['tarball_release'] = \"1.2.7\"\n        Config.conf['installretry'] = 2\n        mock_isavail.return_value = True\n>       utools = UdockerTools(self.local)\n\ntests/unit/test_tools.py:302: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nudocker/tools.py:44: in __init__\n    self.curl = GetURL()\nudocker/utils/curl.py:93: in __init__\n    self._select_implementation()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <udocker.utils.curl.GetURL object at 0x7f01e2c02fd0>\n\n    def _select_implementation(self):\n        \"\"\"Select which implementation to use\"\"\"\n        if GetURLpyCurl().is_available() and not self._curl_exec:\n            self._geturl = GetURLpyCurl()\n            self.cache_support = True\n            Msg().out(\"Debug: using pycurl\", l=Msg.DBG)\n        elif GetURLexeCurl().is_available():\n            self._geturl = GetURLexeCurl()\n            Msg().out(\"Debug: using curl executable\", self._geturl._curl_exec, l=Msg.DBG)\n        else:\n            Msg().err(\"Error: need curl or pycurl to perform downloads\")\n>           raise NameError('need curl or pycurl')\nE           NameError: need curl or pycurl\n\nudocker/utils/curl.py:107: NameError\n----------------------------- Captured stderr call -----------------------------\nError: need curl or pycurl to perform downloads\n--------------------------------- JSON report ----------------------------------\nreport saved to: .report.json\n=========================== short test summary info ============================\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_02__cdrepo - NameErro...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_03__check_imagespec\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_04__check_imagerepo\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_05__set_repository - ...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_06__split_imagespec\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_07_do_mkrepo - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_10__list_tags - NameE...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_11_do_search - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_12_do_load - NameErro...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_13_do_save - NameErro...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_14_do_import - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_15_do_export - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_16_do_clone - NameErr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_17_do_login - NameErr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_18_do_logout - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_21_do_create - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_23_do_run - NameError...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_24_do_images - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_25_do_ps - NameError:...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_26_do_rm - NameError:...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_27_do_rmi - NameError...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_28_do_protect - NameE...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_29_do_unprotect - Nam...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_30_do_name - NameErro...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_31_do_rename - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_32_do_rmname - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_33_do_inspect - NameE...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_34_do_verify - NameEr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_35_do_setup - NameErr...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_36_do_install - NameE...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_37_do_showconf - Name...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_38_do_version - NameE...\nFAILED tests/unit/test_cli.py::UdockerCLITestCase::test_39_do_help - NameErro...\nFAILED tests/unit/test_curl.py::GetURLTestCase::test_03_get_content_length - ...\nFAILED tests/unit/test_curl.py::GetURLTestCase::test_04_set_insecure - NameEr...\nFAILED tests/unit/test_curl.py::GetURLTestCase::test_05_set_proxy - NameError...\nFAILED tests/unit/test_curl.py::GetURLTestCase::test_06_get - NameError: need...\nFAILED tests/unit/test_curl.py::GetURLTestCase::test_07_post - NameError: nee...\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_03_set_registry\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_04_set_index\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_05_is_repo_name\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_06__get_url\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_07__get_file\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_08__split_fields\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_09_is_v1 - N...\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_10_has_search_v1\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_11_get_v1_repo\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_12__get_v1_auth\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_13_get_v1_image_tags\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_14_get_v1_image_tag\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_15_get_v1_image_ancestry\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_16_get_v1_image_json\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_17_get_v1_image_layer\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_18_get_v1_layers_all\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_19__get_v2_auth\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_20_get_v2_login_token\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_21_set_v2_login_token\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_22_is_v2 - N...\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_23_has_search_v2\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_24_get_v2_image_tags\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_25_get_v2_image_manifest\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_26_get_v2_image_layer\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_27_get_v2_layers_all\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_28_get_v2 - ...\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_29__get_v1_id_from_tags\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_30__get_v1_id_from_images\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_31_get_v1 - ...\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_32__parse_imagerepo\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_33_get - Nam...\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_34_get_tags\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_35_search_init\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_36_search_get_page_v1\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_37_search_get_page_v2\nFAILED tests/unit/test_dockerioapi.py::DockerIoAPITestCase::test_38_search_get_page\nFAILED tests/unit/test_geturl.py::GetURLTestCase::test_03_get_content_length\nFAILED tests/unit/test_geturl.py::GetURLTestCase::test_06_get - NameError: ne...\nFAILED tests/unit/test_geturl.py::GetURLTestCase::test_07_post - NameError: n...\nFAILED tests/unit/test_geturl.py::GetURLTestCase::test_08_get_status_code - N...\nFAILED tests/unit/test_hostinfo.py::HostInfoTestCase::test_06_cmd_has_option\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_02__instructions\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_03__version2int\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_04__version_isok\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_05_is_available\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_06_purge - NameEr...\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_07__download - Na...\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_11__get_mirrors\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_12_get_installinfo\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_13__install_logic\nFAILED tests/unit/test_tools.py::UdockerToolsTestCase::test_14_install - Name...\n======================= 89 failed, 353 passed in 12.55s ========================",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/115/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": true
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Ver": {
            "valid": true,
            "subcriteria": {
                "QC.Ver01.0": {
                    "description": "Are tags being used for releasing software",
                    "requirement_level": "MUST",
                    "hint": "Git tags are a convenient way to release software. This subcriterion checks if any git tag is present in the code history. More info on it-scm.com/book/en/v2/Git-Basics-Tagging\" target=\"_blank\">git tagging</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "The code repository uses tags for releasing new software versions",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/indigo-dc/udocker get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.3.13', '1.3.12', '1.3.11', '1.3.10', '1.3.9', '1.3.8', '1.3.7', '1.3.6', '1.3.5', '1.3.5-rc.7', '1.3.5-rc.6', '1.3.5-rc.5', '1.2.10', '1.3.5-rc.4', '1.3.5-rc.3', '1.3.5-rc.2', '1.3.5-rc.1', '1.3.4', '1.3.3', '1.3.2', '1.3.1', '1.1.8', '1.3.0', '1.2.9', '1.1.7', '1.2.4', '1.1.4', '1.1.3', '1.1.2', '1.1.1', '1.1.0', '1.0.4', '1.0.3', '1.0.1', '1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/124/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.3.13",
                                "1.3.12",
                                "1.3.11",
                                "1.3.10",
                                "1.3.9",
                                "1.3.8",
                                "1.3.7",
                                "1.3.6",
                                "1.3.5",
                                "1.3.5-rc.7",
                                "1.3.5-rc.6",
                                "1.3.5-rc.5",
                                "1.2.10",
                                "1.3.5-rc.4",
                                "1.3.5-rc.3",
                                "1.3.5-rc.2",
                                "1.3.5-rc.1",
                                "1.3.4",
                                "1.3.3",
                                "1.3.2",
                                "1.3.1",
                                "1.1.8",
                                "1.3.0",
                                "1.2.9",
                                "1.1.7",
                                "1.2.4",
                                "1.1.4",
                                "1.1.3",
                                "1.1.2",
                                "1.1.1",
                                "1.1.0",
                                "1.0.4",
                                "1.0.3",
                                "1.0.1",
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                },
                "QC.Ver01": {
                    "description": "Is the latest release compliant with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Latest tag must be compliant with <a href=\"https://semver.org\" target=\"_blank\">SemVer specification</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Latest release tag 1.3.13 is SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/indigo-dc/udocker get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.3.13', '1.3.12', '1.3.11', '1.3.10', '1.3.9', '1.3.8', '1.3.7', '1.3.6', '1.3.5', '1.3.5-rc.7', '1.3.5-rc.6', '1.3.5-rc.5', '1.2.10', '1.3.5-rc.4', '1.3.5-rc.3', '1.3.5-rc.2', '1.3.5-rc.1', '1.3.4', '1.3.3', '1.3.2', '1.3.1', '1.1.8', '1.3.0', '1.2.9', '1.1.7', '1.2.4', '1.1.4', '1.1.3', '1.1.2', '1.1.1', '1.1.0', '1.0.4', '1.0.3', '1.0.1', '1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/124/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.3.13",
                                "1.3.12",
                                "1.3.11",
                                "1.3.10",
                                "1.3.9",
                                "1.3.8",
                                "1.3.7",
                                "1.3.6",
                                "1.3.5",
                                "1.3.5-rc.7",
                                "1.3.5-rc.6",
                                "1.3.5-rc.5",
                                "1.2.10",
                                "1.3.5-rc.4",
                                "1.3.5-rc.3",
                                "1.3.5-rc.2",
                                "1.3.5-rc.1",
                                "1.3.4",
                                "1.3.3",
                                "1.3.2",
                                "1.3.1",
                                "1.1.8",
                                "1.3.0",
                                "1.2.9",
                                "1.1.7",
                                "1.2.4",
                                "1.1.4",
                                "1.1.3",
                                "1.1.2",
                                "1.1.1",
                                "1.1.0",
                                "1.0.4",
                                "1.0.3",
                                "1.0.1",
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                },
                "QC.Ver02": {
                    "description": "Are all release tags with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Existent release tags shall be <a href=\"https://semver.org\" target=\"_blank\">SemVer</a> compliant for this subcriterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "All release tags are SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/indigo-dc/udocker get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.3.13', '1.3.12', '1.3.11', '1.3.10', '1.3.9', '1.3.8', '1.3.7', '1.3.6', '1.3.5', '1.3.5-rc.7', '1.3.5-rc.6', '1.3.5-rc.5', '1.2.10', '1.3.5-rc.4', '1.3.5-rc.3', '1.3.5-rc.2', '1.3.5-rc.1', '1.3.4', '1.3.3', '1.3.2', '1.3.1', '1.1.8', '1.3.0', '1.2.9', '1.1.7', '1.2.4', '1.1.4', '1.1.3', '1.1.2', '1.1.1', '1.1.0', '1.0.4', '1.0.3', '1.0.1', '1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/execution/node/124/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/udocker.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.3.13",
                                "1.3.12",
                                "1.3.11",
                                "1.3.10",
                                "1.3.9",
                                "1.3.8",
                                "1.3.7",
                                "1.3.6",
                                "1.3.5",
                                "1.3.5-rc.7",
                                "1.3.5-rc.6",
                                "1.3.5-rc.5",
                                "1.2.10",
                                "1.3.5-rc.4",
                                "1.3.5-rc.3",
                                "1.3.5-rc.2",
                                "1.3.5-rc.1",
                                "1.3.4",
                                "1.3.3",
                                "1.3.2",
                                "1.3.1",
                                "1.1.8",
                                "1.3.0",
                                "1.2.9",
                                "1.1.7",
                                "1.2.4",
                                "1.1.4",
                                "1.1.3",
                                "1.1.2",
                                "1.1.1",
                                "1.1.0",
                                "1.0.4",
                                "1.0.3",
                                "1.0.1",
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 3,
                "success_subcriteria": 3
            }
        }
    },
    "badge": {
        "software": {
            "criteria": {
                "bronze": {
                    "to_fulfill": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc"
                    ],
                    "missing": [],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc"
                    ]
                },
                "silver": {
                    "to_fulfill": [
                        "QC.Lic",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Met",
                        "QC.Doc"
                    ],
                    "missing": [],
                    "fulfilled": [
                        "QC.Lic",
                        "QC.Met",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Doc"
                    ]
                },
                "gold": {
                    "to_fulfill": [
                        "QC.Lic",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Uni",
                        "QC.Met",
                        "QC.Sty",
                        "QC.Doc",
                        "QC.Sec"
                    ],
                    "missing": [
                        "QC.Uni"
                    ],
                    "fulfilled": [
                        "QC.Lic",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Met",
                        "QC.Sty",
                        "QC.Doc",
                        "QC.Sec"
                    ]
                }
            },
            "data": {
                "entityType": "Assertion",
                "entityId": "WfcvaKvSSfi6hWOMNubP9A",
                "openBadgeId": "https://api.eu.badgr.io/public/assertions/WfcvaKvSSfi6hWOMNubP9A",
                "createdAt": "2024-04-02T17:58:59.704282359Z",
                "createdBy": "aS1lWKgIR4u8bGjPZUzAyg",
                "badgeclass": "IDUsZJpNQPuiJpPwmJ8iJw",
                "badgeclassOpenBadgeId": "https://api.eu.badgr.io/public/badges/IDUsZJpNQPuiJpPwmJ8iJw",
                "issuer": "aS1lWKgIR4u8bGjPZUzAyg",
                "issuerOpenBadgeId": "https://api.eu.badgr.io/public/issuers/aS1lWKgIR4u8bGjPZUzAyg",
                "image": "https://api.eu.badgr.io/public/assertions/WfcvaKvSSfi6hWOMNubP9A/image",
                "recipient": {
                    "identity": "sha256$f3efd70768b26e3e65f802e31c2f2ef4a82867d010531f7f6132fa9746468d0b",
                    "hashed": true,
                    "type": "url",
                    "salt": "nI7ttbwXOpJjjM9C",
                    "plaintextIdentity": "https://github.com/indigo-dc/udocker"
                },
                "issuedOn": "2024-04-02T17:58:59.704285933Z",
                "narrative": "SQAaaS assessment results for repository https://github.com/indigo-dc/udocker (commit: 70915267d784b1cabe5703187112183fc1adfd99, branch/tag: devel3)",
                "evidence": [
                    {
                        "url": "https://github.com/EOSC-synergy/udocker.assess.sqaaas/commit/35c3333d2d15d1cfff00e7012d26b4fc106c21af",
                        "narrative": "SQAaaS build repository"
                    },
                    {
                        "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/udocker.assess.sqaaas/job/devel3/74/",
                        "narrative": "Build page from Jenkins CI"
                    }
                ],
                "revoked": false,
                "revocationReason": null,
                "acceptance": "Unaccepted",
                "expires": null,
                "extensions": {},
                "assertionRef": {
                    "assertionUrl": "https://api.eu.badgr.io/public/assertions/WfcvaKvSSfi6hWOMNubP9A"
                },
                "badgeRef": {
                    "badgeUrl": "https://api.eu.badgr.io/public/badges/IDUsZJpNQPuiJpPwmJ8iJw"
                },
                "issuerRef": {
                    "issuerUrl": "https://api.eu.badgr.io/public/issuers/aS1lWKgIR4u8bGjPZUzAyg"
                },
                "pending": null,
                "source": "local",
                "sourceUrl": null,
                "originalJson": null,
                "imagePath": "uploads/badges/assertion-WfcvaKvSSfi6hWOMNubP9A.png"
            },
            "share": "<!--\nSPDX-FileCopyrightText: Copyright contributors to the Software Quality Assurance as a Service (SQAaaS) project <sqaaas@ibergrid.eu>\nSPDX-FileContributor: Pablo Orviz <orviz@ifca.unican.es>\n\nSPDX-License-Identifier: GPL-3.0-only\n-->\n\n<blockquote class=\"badgr-badge\" style=\"font-family: Helvetica, Roboto, &quot;Segoe UI&quot;, Calibri, sans-serif;\"><a href=\"https://api.eu.badgr.io/public/assertions/WfcvaKvSSfi6hWOMNubP9A?identity__url=https%3A//github.com/EOSC-synergy/udocker.assess.sqaaas/commit/35c3333d2d15d1cfff00e7012d26b4fc106c21af\"><img width=\"120px\" height=\"120px\" src=\"https://api.eu.badgr.io/public/assertions/WfcvaKvSSfi6hWOMNubP9A/image\"></a><script async=\"async\" src=\"https://eu.badgr.com/assets/widgets.bundle.js\"></script></blockquote>",
            "verification_url": "https://badgecheck.io/?url=https%3A%2F%2Fapi.eu.badgr.io%2Fpublic%2Fassertions%2FWfcvaKvSSfi6hWOMNubP9A?identity__url=https%3A%2F%2Fgithub.com%2FEOSC-synergy%2Fudocker.assess.sqaaas%2Fcommit%2F35c3333d2d15d1cfff00e7012d26b4fc106c21af&amp;identity__url=https%3A%2F%2Fgithub.com%2FEOSC-synergy%2Fudocker.assess.sqaaas%2Fcommit%2F35c3333d2d15d1cfff00e7012d26b4fc106c21af"
        }
    }
}